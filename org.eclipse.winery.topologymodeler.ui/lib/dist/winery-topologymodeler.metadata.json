{"__symbolic":"module","version":4,"metadata":{"WineryModule":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":47,"character":1},"arguments":[{"declarations":[{"__symbolic":"reference","name":"ɵa"},{"__symbolic":"reference","name":"ɵg"},{"__symbolic":"reference","name":"ɵi"},{"__symbolic":"reference","name":"ɵj"}],"exports":[{"__symbolic":"reference","name":"ɵa"}],"imports":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":56,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":57,"character":8},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":58,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":59,"character":8},"member":"forRoot"},"arguments":[[{"path":"**","redirectTo":"","pathMatch":"full"}]]},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":60,"character":8},{"__symbolic":"reference","module":"@angular-redux/store","name":"NgReduxModule","line":61,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/dropdown","name":"BsDropdownModule","line":62,"character":8},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrModule","line":63,"character":8},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/accordion","name":"AccordionModule","line":64,"character":8},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","name":"ɵk"},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"angular2-hotkeys","name":"HotkeyModule","line":66,"character":8},"member":"forRoot"}},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/typeahead","name":"TypeaheadModule","line":68,"character":8},"member":"forRoot"}}],"providers":[{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵbk"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵz"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵba"}],"bootstrap":[{"__symbolic":"reference","name":"ɵa"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","module":"@angular-redux/store","name":"DevToolsExtension","line":90,"character":26}]}]}},"ɵa":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":38,"character":1},"arguments":[{"selector":"winery-topologymodeler","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n<router-outlet *ngIf=\"!readonly\"></router-outlet>\n\n<winery-topology-renderer *ngIf=\"loaded?.loadedData\"\n                          [readonly]=\"readonly\"\n                          [entityTypes]=\"this.entityTypes\"\n                          [relationshipTypes]=\"relationshipTypes\"\n                          [differencesData]=\"topologyDifferences\"\n                          [nodeTemplates]=\"nodeTemplates\"\n                          [relationshipTemplates]=\"relationshipTemplates\"\n                          (generatedReduxState)=\"onReduxReady()\">\n</winery-topology-renderer>\n\n<div *ngIf=\"loaded?.generatedReduxState\">\n    <div *ngIf=\"!hideNavBarState\">\n        <winery-palette-component *ngIf=\"!topologyDifferences || !readonly\"\n                                  style=\"width:200px;float:left;margin-top:50px\"\n                                  [entityTypes]=\"this.entityTypes\">\n        </winery-palette-component>\n    </div>\n\n    <winery-sidebar style=\"width : 300px; float:right; z-index: 400\"></winery-sidebar>\n</div>\n<!--\n<app-sidebar style=\"width : 300px; float:right\"></app-sidebar>\n-->\n","styles":[""]}]}],"members":{"topologyModelerData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":84,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵb"},{"__symbolic":"reference","name":"ɵc"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵe"},{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]}]}],"ngOnInit":[{"__symbolic":"method"}],"initEntityType":[{"__symbolic":"method"}],"initiateLocalRendering":[{"__symbolic":"method"}],"initTopologyTemplate":[{"__symbolic":"method"}],"initiateBackendCalls":[{"__symbolic":"method"}],"onReduxReady":[{"__symbolic":"method"}],"setNodeVisuals":[{"__symbolic":"method"}]}},"ɵb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":26,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}]}},"ɵc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":20,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameterDecorators":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Inject","line":26,"character":17},"arguments":[{"__symbolic":"reference","module":"@angular/platform-browser","name":"DOCUMENT","line":26,"character":24}]}]],"parameters":[{"__symbolic":"reference","name":"any"}]}],"trigger":[{"__symbolic":"method"}],"createEvent":[{"__symbolic":"method"}]}},"ɵd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":34,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":92,"character":30},{"__symbolic":"reference","module":"@angular/router","name":"ActivatedRoute","line":93,"character":40},{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":94,"character":31}]}],"everythingLoaded":[{"__symbolic":"method"}],"requestTopologyTemplateAndVisuals":[{"__symbolic":"method"}],"requestServiceTemplate":[{"__symbolic":"method"}],"requestRelationshipTypeVisualappearance":[{"__symbolic":"method"}],"requestAllNodeTemplateVisuals":[{"__symbolic":"method"}],"requestPolicyTypes":[{"__symbolic":"method"}],"requestRequirementTypes":[{"__symbolic":"method"}],"requestCapabilityTypes":[{"__symbolic":"method"}],"requestGroupedNodeTypes":[{"__symbolic":"method"}],"requestNodeTypes":[{"__symbolic":"method"}],"requestPolicyTemplates":[{"__symbolic":"method"}],"requestArtifactTypes":[{"__symbolic":"method"}],"requestArtifactTemplates":[{"__symbolic":"method"}],"requestRelationshipTypes":[{"__symbolic":"method"}],"requestNamespaces":[{"__symbolic":"method"}],"requestArtifactTemplate":[{"__symbolic":"method"}],"requestPolicyTemplate":[{"__symbolic":"method"}],"saveTopologyTemplate":[{"__symbolic":"method"}],"importTopology":[{"__symbolic":"method"}],"splitTopology":[{"__symbolic":"method"}],"matchTopology":[{"__symbolic":"method"}],"createNewArtifact":[{"__symbolic":"method"}],"getNewlyCreatedArtifact":[{"__symbolic":"method"}],"requestAllTopologyTemplates":[{"__symbolic":"method"}]}},"ɵe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":18,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"generateNodeAndRelationshipTemplates":[{"__symbolic":"method"}]}},"ɵf":{"__symbolic":"interface"},"ɵg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"winery-palette-component","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<div class=\"bootstrap-vertical-nav\">\n\n    <button [@paletteButtonState]=\"paletteButtonRootState\" id=\"palette_root\" class=\"btn btn-primary\" type=\"button\"\n            (click)=\"toggleRootState()\" style=\"transform: rotate(-90deg) translateY(-135px) translateX(-135px)\">\n        <div *ngIf=\"paletteRootState === 'shrunk'\">Open Palette</div>\n        <div *ngIf=\"paletteRootState === 'extended'\">Hide Palette</div>\n    </button>\n\n    <div [@paletteItemState]=\"paletteRootState\" class=\"palette-items-wrapper\">\n        <accordion [closeOthers]=\"oneAtATime\">\n            <accordion-group *ngFor=\"let ns of entityTypes.groupedNodeTypes; let i = index;\">\n                <div accordion-heading>{{ns.text}}</div>\n                <ul class=\"nav flex-column nav-tabs\">\n                    <li *ngFor=\"let child of ns.children\" class=\"nav-item\">\n                        <div class=\"btn btn-light btn-sm btn-block\"\n                             (mousedown)=\"generateNewNode($event)\">{{ child.text }}\n                        </div>\n                    </li>\n                </ul>\n            </accordion-group>\n        </accordion>\n    </div>\n</div>\n\n","styles":["#palette_root{border-radius:0 .25rem .25rem 0;box-shadow:initial;background-color:#dfdfdf;border:1px solid silver;color:#000;min-width:300px;font-size:small}#palette_root:hover{background-color:#eaf2f5}.palette-items-wrapper{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}accordion-group{font-size:x-small!important;max-width:300px;text-overflow:ellipsis!important;overflow:hidden!important;white-space:nowrap!important;text-align:start!important}.card-header{padding:.25rem .65rem!important}accordion-group:hover{max-width:100%;overflow:visible;white-space:normal}.nav-item{color:#000;max-width:260px;font-size:x-small!important;padding-top:.4em;padding-bottom:.6em}li div{text-overflow:ellipsis!important;overflow:hidden!important;white-space:nowrap!important;text-align:start!important}.nav-item:hover{max-width:100%;overflow:visible;white-space:normal}.bootstrap-vertical-nav{position:fixed;float:left;height:100vh}.btn-light{border:1px solid silver;font-size:x-small;background-color:#efefef;box-shadow:0 1px 2px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);transition:box-shadow .3s cubic-bezier(.25,.8,.25,1)}.btn-light:hover{border:1px solid silver;font-size:x-small;background-color:#f6f5f4;box-shadow:0 3px 6px rgba(0,0,0,.25),0 3px 3px rgba(0,0,0,.22)}.nav-tabs{border-bottom:none;overflow-y:scroll;max-height:50vh}"],"providers":[],"animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":72,"character":8},"arguments":["paletteItemState",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":73,"character":12},"arguments":["shrunk",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":73,"character":28},"arguments":[{"display":"none","opacity":"0","height":"*"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":78,"character":12},"arguments":["extended",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":78,"character":30},"arguments":[{"display":"block","opacity":"1","height":"*"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":83,"character":12},"arguments":["shrunk => extended",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":83,"character":45},"arguments":["500ms ease-out"]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":84,"character":12},"arguments":["extended => shrunk",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":84,"character":45},"arguments":["500ms ease-out"]}]}]]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":86,"character":8},"arguments":["paletteButtonState",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":87,"character":12},"arguments":["left",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":87,"character":26},"arguments":[{"display":"block","opacity":"1","height":"*","transform":"rotate(-90deg) translateY(-135px) translateX(-135px)"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":93,"character":12},"arguments":["top",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":93,"character":25},"arguments":[{"display":"block","opacity":"1","height":"*","transform":"rotate(0deg) translateY(0px) translateX(0px)"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":99,"character":12},"arguments":["left => top",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":99,"character":38},"arguments":["200ms ease-in"]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":100,"character":12},"arguments":["top => left",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":100,"character":38},"arguments":["200ms ease-in",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"keyframes","line":100,"character":63},"arguments":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":101,"character":16},"arguments":[{"opacity":"1","transform":"rotate(0deg) translateY(0px) translateX(0px)"}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":102,"character":16},"arguments":[{"opacity":"0","transform":"rotate(-45deg) translateY(-75px) translateX(-75px)"}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":103,"character":16},"arguments":[{"opacity":"1","transform":"rotate(-90deg) translateY(-135px) translateX(-135px)"}]}]]}]}]}]]}]}]}],"members":{"entityTypes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":109,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵd"}]}],"updateState":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"toggleRootState":[{"__symbolic":"method"}],"updateNodes":[{"__symbolic":"method"}],"generateNewNode":[{"__symbolic":"method"}],"generateIdTypeColorProperties":[{"__symbolic":"method"}],"setKVProperties":[{"__symbolic":"method"}],"getNewNodeDataFromNodeTypes":[{"__symbolic":"method"}],"getDefaultPropertiesFromNodeTypes":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":184,"character":1}}],"members":{},"statics":{"SEND_PALETTE_OPENED":"SEND_PALETTE_OPENED","HIDE_NAVBAR_AND_PALETTE":"HIDE_NAVBAR_AND_PALETTE","SAVE_NODE_TEMPLATE":"SAVE_NODE_TEMPLATE","SAVE_RELATIONSHIP":"SAVE_RELATIONSHIP","DELETE_NODE_TEMPLATE":"DELETE_NODE_TEMPLATE","DELETE_RELATIONSHIP_TEMPLATE":"DELETE_RELATIONSHIP_TEMPLATE","CHANGE_NODE_NAME":"CHANGE_NODE_NAME","OPEN_SIDEBAR":"OPEN_SIDEBAR","UPDATE_NODE_COORDINATES":"UPDATE_NODE_COORDINATES","UPDATE_REL_DATA":"UPDATE_REL_DATA","CHANGE_MIN_INSTANCES":"CHANGE_MIN_INSTANCES","CHANGE_MAX_INSTANCES":"CHANGE_MAX_INSTANCES","INC_MIN_INSTANCES":"INC_MIN_INSTANCES","DEC_MIN_INSTANCES":"DEC_MIN_INSTANCES","INC_MAX_INSTANCES":"INC_MAX_INSTANCES","DEC_MAX_INSTANCES":"DEC_MAX_INSTANCES","SET_PROPERTY":"SET_PROPERTY","SET_CAPABILITY":"SET_CAPABILITY","SET_REQUIREMENT":"SET_REQUIREMENT","SET_DEPLOYMENT_ARTIFACT":"SET_DEPLOYMENT_ARTIFACT","DELETE_DEPLOYMENT_ARTIFACT":"DELETE_DEPLOYMENT_ARTIFACT","SET_POLICY":"SET_POLICY","SET_TARGET_LOCATION":"SET_TARGET_LOCATION","DELETE_POLICY":"DELETE_POLICY","SEND_CURRENT_NODE_ID":"SEND_CURRENT_NODE_ID"}},"ɵi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":32,"character":1},"arguments":[{"selector":"winery-sidebar","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<div id=\"NTPropertiesView\"\n     class=\"sidebar-root\"\n     style=\"display: block;\"\n     [@sidebarAnimationStatus]=\"sidebarAnimationStatus\"\n     *ngIf=\"sidebarState.sidebarVisible\">\n\n    <div id=\"nodeTemplateInformationSection\" style=\"margin: 8px\">\n        <button type=\"button\" class=\"close\" style=\"color: #000000\" aria-label=\"Close\" (click)=\"closeSidebar()\">\n            <span aria-hidden=\"true\">&times;</span>\n        </button>\n        <fieldset>\n            <div class=\"form-group\">\n                <label for=\"nodetemplateid\">Id</label>\n                <input id=\"nodetemplateid\" disabled=\"disabled\" class=\"form-control\" value=\"{{sidebarState.id}}\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"nodetemplatename\" class=\"control-label\">Name</label>\n                <input id=\"nodetemplatename\" name=\"name\" class=\"form-control\"\n                       value=\"{{sidebarState.nameTextFieldValue}}\"\n                       (keyup)=\"nodeNameKeyUp.next($event.target.value)\"\n                       (focus)=\"onFocus($event)\"\n                       (blur)=\"onBlur($event)\">\n            </div>\n            <div class=\"form-group\">\n                <label for=\"nodetemplateType\">Type</label>\n                <a id=\"nodetemplateType\"\n                   target=\"_blank\"\n                   [routerLink]=\"\"\n                   (click)=\"linkType($event)\"\n                   class=\"form-control\">\n                    {{sidebarState.type}}\n                </a>\n            </div>\n            <div *ngIf=\"sidebarState.nodeClicked\">\n                <div class=\"form-group\">\n                    <label for=\"maxInstances\">max</label>\n                    <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"input-sm\">\n                                <div class=\"input-group bootstrap-touchspin\">\n                <span class=\"input-group-addon bootstrap-touchspin-prefix\"\n                      style=\"display: none;\">6\n                </span>\n                                    <input id=\"maxInstances\"\n                                           (keyup)=\"nodeMaxInstancesKeyUp.next($event.target.value)\"\n                                           value=\"{{sidebarState.maxInstances}}\"\n                                           min=\"0\"\n                                           max=\"9999999\"\n                                           type=\"number\"\n                                           name=\"maxInstances\"\n                                           class=\"form-control\"\n                                           [readonly]=\"!maxInputEnabled\"\n                                           placeholder=\"∞\"\n                                           style=\"display: block; border-radius: 0.25rem; margin-right: 3px\">\n                                    <span class=\"input-group-addon bootstrap-touchspin-postfix\"\n                                          style=\"display: none;\"></span>\n                                    <span class=\"input-group-btn-vertical\">\n                  <button class=\"btn btn-default\"\n                          type=\"button\"\n                          style=\"box-shadow: none; border: 2px solid #dddddd; height: 38px\"\n                          [style.background-color]=\"getInfinityButtonStyle()\"\n                          (click)=\"maxInstancesChanged('inf');\">\n                    <span class=\"h6\" style=\"font-weight: bolder;\">∞</span>\n                  </button>\n                  <button class=\"btn btn-default bootstrap-touchspin-up\"\n                          type=\"button\"\n                          (click)=\"maxInstancesChanged('inc');\">\n                    <i class=\"fa fa-chevron-up\"></i>\n                  </button>\n                  <button class=\"btn btn-default bootstrap-touchspin-down\"\n                          type=\"button\"\n                          (click)=\"maxInstancesChanged('dec');\">\n                    <i class=\"fa fa-chevron-down\"></i>\n                  </button>\n                </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <label for=\"minInstances\">min</label>\n                    <div class=\"row\">\n                        <div class=\"col-lg-12\">\n                            <div class=\"input-sm\">\n                                <div class=\"input-group bootstrap-touchspin\">\n                <span class=\"input-group-addon bootstrap-touchspin-prefix\"\n                      style=\"display: none;\">\n                </span>\n                                    <input id=\"minInstances\"\n                                           (keyup)=\"nodeMinInstancesKeyUp.next($event.target.value)\"\n                                           value=\"{{sidebarState.minInstances}}\"\n                                           min=\"0\"\n                                           max=\"9999999\"\n                                           type=\"number\"\n                                           name=\"minInstances\"\n                                           class=\"form-control\"\n                                           style=\"display: block; border-radius: 0.25rem; margin-right: 3px\">\n                                    <span class=\"input-group-addon bootstrap-touchspin-postfix\"\n                                          style=\"display: none;\"></span>\n                                    <span class=\"input-group-btn-vertical\">\n                  <button class=\"btn btn-default bootstrap-touchspin-up\"\n                          type=\"button\"\n                          (click)=\"minInstancesChanged('inc');\">\n                    <i class=\"fa fa-chevron-up\"></i>\n                  </button>\n                  <button class=\"btn btn-default bootstrap-touchspin-down\"\n                          type=\"button\"\n                          (click)=\"minInstancesChanged('dec');\">\n                    <i class=\"fa fa-chevron-down\"></i>\n                  </button>\n                </span>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </fieldset>\n    </div>\n</div>\n","styles":[".sidebar-root{border:1px solid #aaa;border-radius:.25rem;color:#000;top:54px;z-index:999;position:fixed;box-shadow:2px 2px 10px -2px rgba(42,42,42,.75);background-color:#efefef;width:300px;max-width:300px}a,input{overflow-y:auto}input[type=number]{-moz-appearance:textfield}input::-webkit-inner-spin-button,input::-webkit-outer-spin-button{-webkit-appearance:none}"],"animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":170,"character":8},"arguments":["sidebarAnimationStatus",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":171,"character":12},"arguments":["in",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":171,"character":24},"arguments":[{"transform":"translateX(0)"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":172,"character":12},"arguments":["void => *",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":173,"character":16},"arguments":[{"transform":"translateX(100%)"}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":174,"character":16},"arguments":["100ms cubic-bezier(0.86, 0, 0.07, 1)"]}]]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":176,"character":12},"arguments":["* => void",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":177,"character":16},"arguments":["200ms cubic-bezier(0.86, 0, 0.07, 1)",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":177,"character":64},"arguments":[{"opacity":0,"transform":"translateX(100%)"}]}]}]]}]]}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵd"}]}],"closeSidebar":[{"__symbolic":"method"}],"getInfinityButtonStyle":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"minInstancesChanged":[{"__symbolic":"method"}],"maxInstancesChanged":[{"__symbolic":"method"}],"onFocus":[{"__symbolic":"method"}],"onBlur":[{"__symbolic":"method"}],"linkType":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":16,"character":1},"arguments":[{"selector":"winery-print-view","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<p>\n    print-view works!\n</p>\n","styles":[""]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":46,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":48,"character":8},{"__symbolic":"reference","module":"@angular/forms","name":"FormsModule","line":49,"character":8},{"__symbolic":"reference","module":"@angular/http","name":"HttpModule","line":50,"character":8},{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClientModule","line":51,"character":8},{"__symbolic":"reference","module":"@angular/platform-browser/animations","name":"BrowserAnimationsModule","line":52,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/dropdown","name":"BsDropdownModule","line":53,"character":8},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrModule","line":54,"character":8},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/accordion","name":"AccordionModule","line":55,"character":8},"member":"forRoot"}},{"__symbolic":"reference","module":"@angular-redux/store","name":"NgReduxModule","line":56,"character":8},{"__symbolic":"reference","module":"@angular/router","name":"RouterModule","line":57,"character":8},{"__symbolic":"reference","name":"ɵl"},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/typeahead","name":"TypeaheadModule","line":59,"character":8},"member":"forRoot"}},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap/tooltip","name":"TooltipModule","line":60,"character":8},"member":"forRoot"}}],"declarations":[{"__symbolic":"reference","name":"ɵq"},{"__symbolic":"reference","name":"ɵs"},{"__symbolic":"reference","name":"ɵt"},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"ɵbb"},{"__symbolic":"reference","name":"ɵbc"},{"__symbolic":"reference","name":"ɵbd"},{"__symbolic":"reference","name":"ɵbe"},{"__symbolic":"reference","name":"ɵbf"},{"__symbolic":"reference","name":"ɵbg"},{"__symbolic":"reference","name":"ɵbh"},{"__symbolic":"reference","name":"ɵbi"},{"__symbolic":"reference","name":"ɵbj"},{"__symbolic":"reference","name":"ɵbl"},{"__symbolic":"reference","name":"ɵbm"},{"__symbolic":"reference","name":"ɵbn"}],"exports":[{"__symbolic":"reference","name":"ɵbb"},{"__symbolic":"reference","name":"ɵbm"}]}]}],"members":{"__ctor__":[{"__symbolic":"constructor"}]},"statics":{"forRoot":{"__symbolic":"function","parameters":[],"value":{"ngModule":{"__symbolic":"reference","name":"ɵk"},"providers":[{"__symbolic":"reference","name":"ɵv"}]}}}},"ɵl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"NgModule","line":26,"character":1},"arguments":[{"imports":[{"__symbolic":"reference","module":"@angular/common","name":"CommonModule","line":28,"character":8},{"__symbolic":"reference","module":"@angular/platform-browser","name":"BrowserModule","line":29,"character":8},{"__symbolic":"call","expression":{"__symbolic":"select","expression":{"__symbolic":"reference","module":"ngx-bootstrap","name":"ModalModule","line":30,"character":8},"member":"forRoot"}}],"exports":[{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"},{"__symbolic":"reference","module":"ngx-bootstrap","name":"ModalModule","line":37,"character":8}],"declarations":[{"__symbolic":"reference","name":"ɵm"},{"__symbolic":"reference","name":"ɵp"},{"__symbolic":"reference","name":"ɵn"},{"__symbolic":"reference","name":"ɵo"}],"providers":[]}]}],"members":{}},"ɵm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":58,"character":1},"arguments":[{"selector":"winery-modal","template":"<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ~ Copyright (c) 2017 Contributors to the Eclipse Foundation\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->\n<script src=\"../section/section.module.ts\"></script>\n<div class=\"modal-dialog\" [ngClass]=\"getCssClasses()\">\n    <div class=\"modal-content\">\n        <ng-content></ng-content>\n    </div>\n</div>\n"}]}],"members":{"modalRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":83,"character":5}}]}],"size":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":84,"character":5}}]}],"keyboard":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":85,"character":5}}]}],"backdrop":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":86,"character":5}}]}],"hostClass":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":88,"character":5},"arguments":["class"]}]}],"hostRole":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":89,"character":5},"arguments":["attr.role"]}]}],"hostTabIndex":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostBinding","line":90,"character":5},"arguments":["tabindex"]}]}],"headerContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":92,"character":5},"arguments":[{"__symbolic":"reference","name":"ɵn"}]}]}],"footerContent":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ContentChild","line":93,"character":5},"arguments":[{"__symbolic":"reference","name":"ɵo"}]}]}],"ngAfterContentInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"getCssClasses":[{"__symbolic":"method"}],"isSmall":[{"__symbolic":"method"}],"isLarge":[{"__symbolic":"method"}]}},"ɵn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"winery-modal-header","template":"<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ~ Copyright (c) 2017 Contributors to the Eclipse Foundation\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->\n<div class=\"modal-header\">\n    <button type=\"button\" class=\"close pull-right\" (click)=\"modalRef.hide()\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n    </button>\n    <h4 class=\"modal-title\">{{ title }}</h4>\n</div>\n"}]}],"members":{"modalRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":39,"character":5}}]}],"title":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":40,"character":5}}]}]}},"ɵo":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"winery-modal-footer","template":"<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ~ Copyright (c) 2017 Contributors to the Eclipse Foundation\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->\n<div class=\"modal-footer\">\n    <ng-content></ng-content>\n    <button *ngIf=\"showDefaultButtons\" type=\"button\" class=\"btn btn-default\" (click)=\"cancel()\">{{ closeButtonLabel }}\n    </button>\n    <button *ngIf=\"showDefaultButtons\" type=\"button\" class=\"btn btn-primary\" (click)=\"ok()\"\n            [disabled]=\"disableOkButton\">{{ okButtonLabel }}\n    </button>\n</div>\n"}]}],"members":{"showDefaultButtons":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":5}}]}],"closeButtonLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":43,"character":5}}]}],"okButtonLabel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":44,"character":5}}]}],"modalRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":45,"character":5}}]}],"disableOkButton":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":46,"character":5}}]}],"onOk":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":47,"character":5}}]}],"onCancel":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":48,"character":5}}]}],"ok":[{"__symbolic":"method"}],"cancel":[{"__symbolic":"method"}]}},"ɵp":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":15,"character":1},"arguments":[{"selector":"winery-modal-body","template":"<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ~ Copyright (c) 2017 Contributors to the Eclipse Foundation\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->\n<div class=\"modal-body\">\n    <ng-content></ng-content>\n</div>\n"}]}],"members":{}},"ɵq":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":28,"character":1},"arguments":[{"selector":"winery-navbar","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<nav class=\"navbar navbar-light bg-faded\" *ngIf=\"!hideNavBarState\" [@navbarInOut]>\n    <form class=\"form-inline\" style=\"justify-content: center;\">\n        <h3 *ngIf=\"!readonly\" style=\"margin-right: .5em;\">winery</h3>\n        <button *ngIf=\"!readonly\"\n                class=\"btn btn-sm align-middle btn-success\" type=\"button\" style=\"margin: 2px\"\n                (click)=\"saveTopologyTemplateToRepository()\">Save\n        </button>\n\n        <div class=\"btn-group\" data-toggle=\"buttons\" style=\"margin-left: 4px;\">\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"layout\"\n                (click)=\"toggleButton($event)\">\n                Layout<i class=\"fa fa-th\" aria-hidden=\"true\" style=\"padding-left: .5em; pointer-events: none;\"></i>\n            </button>\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"alignh\"\n                (click)=\"toggleButton($event)\">\n                Align<i class=\"fa fa-ellipsis-h\" style=\"padding-left: .5em; pointer-events: none;\"></i>\n            </button>\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"alignv\"\n                (click)=\"toggleButton($event)\">\n                Align<i class=\"fa fa-ellipsis-v\" style=\"padding-left: .5em; pointer-events: none;\"></i>\n            </button>\n        </div>\n        <div class=\"btn-group\" data-toggle=\"buttons\" style=\"margin-left: 4px\">\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"ids\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.idsButton)\">\n                Ids\n            </button>\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"types\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.typesButton)\">\n                Types\n            </button>\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"properties\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.propertiesButton)\">\n                Properties\n            </button>\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"deploymentArtifacts\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.deploymentArtifactsButton)\">\n                Deployment Artifacts\n            </button>\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"requirementsCapabilities\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.requirementsCapabilitiesButton)\">\n                Requirements & Capabilities\n            </button>\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"policies\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.policiesButton)\">\n                Policies\n            </button>\n            <button\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"targetLocations\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.targetLocationsButton)\">\n                Target Locations\n            </button>\n            <button *ngIf=\"!readonly\"\n                    class=\"btn btn-sm align-middle dark-button-style\" type=\"button\" style=\"margin-left: 4px\">Print View\n            </button>\n            <button\n                *ngIf=\"!readonly\"\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"split\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.splitTopologyButton)\"\n                [disabled]=\"splittingOngoing\">\n                {{splittingOngoing? 'Splitting...' : 'Split'}}\n            </button>\n            <button\n                *ngIf=\"!readonly\"\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"match\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.matchTopologyButton)\"\n                [disabled]=\"matchingOngoing\">\n                {{matchingOngoing? 'Matching...' : 'Match'}}\n            </button>\n            <button\n                *ngIf=\"!readonly\"\n                class=\"btn btn-sm align-middle dark-button-style\"\n                type=\"button\"\n                id=\"importTopology\"\n                (click)=\"toggleButton($event)\"\n                [style.background-color]=\"getStyle(navbarButtonsState.buttonsState.importTopologyButton)\">\n                Import Topology\n            </button>\n        </div>\n        <div *ngIf=\"!readonly\" class=\"btn-group\" style=\"margin-left: 4px\" dropdown>\n            <button dropdownToggle type=\"button\" class=\"btn btn-sm dark-button-style align-middle dropdown-toggle\">\n                Other <span class=\"caret\"></span>\n            </button>\n            <ul *dropdownMenu class=\"dropdown-menu\" role=\"menu\">\n                <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\">Complete Topology</a></li>\n                <li role=\"menuitem\">\n                    <button style=\"cursor: pointer\" #exportCsarButton target=\"_blank\"\n                            tooltip=\"Hold CTRL key to export XML only.\"\n                            placement=\"left\" class=\"dropdown-item\" (click)=\"exportCsar($event)\">Export CSAR\n                    </button>\n                </li>\n                <li role=\"menuitem\"><a class=\"dropdown-item\" href=\"#\">About</a></li>\n            </ul>\n        </div>\n    </form>\n</nav>\n","styles":["@import url(https://fonts.googleapis.com/css?family=Roboto:300);.dark-button-style{color:#212121;border:1px solid #ccc;border-radius:4px;font-family:Roboto,sans-serif;font-weight:lighter;font-size:14px;white-space:nowrap;vertical-align:middle;cursor:pointer}.dark-button-style:focus{border-color:#424242;box-shadow:none}.dark-button-style:hover{background-color:#fff;color:#000;border-color:#424242}.dropdown-menu li:hover a{background-color:#fff!important}.dropdown-menu li{border:1px solid transparent}.dropdown-menu li:hover{border-color:#fff}.dropdown-menu{background-image:linear-gradient(to bottom,#fff 0,#e0e0e0 100%);padding:0}.dropdown-item{color:#000!important}.navbar-light{background-image:linear-gradient(to bottom,#fff 0,#e0e0e0 100%)}"],"animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":185,"character":8},"arguments":["navbarInOut",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":186,"character":12},"arguments":["void => *",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":187,"character":16},"arguments":[{"transform":"translateY(-100%)"}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":188,"character":16},"arguments":["200ms ease-out"]}]]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":190,"character":12},"arguments":["* => void",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":191,"character":16},"arguments":["200ms ease-in",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":191,"character":41},"arguments":[{"transform":"translateY(-100%)"}]}]}]]}]]}]}]}],"members":{"hideNavBarState":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":201,"character":5}}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":202,"character":5}}]}],"exportCsarButtonRef":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":204,"character":5},"arguments":["exportCsarButton"]}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":214,"character":31},{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","module":"angular2-hotkeys","name":"HotkeysService","line":218,"character":40}]}],"setButtonsState":[{"__symbolic":"method"}],"getStyle":[{"__symbolic":"method"}],"exportCsar":[{"__symbolic":"method"}],"toggleButton":[{"__symbolic":"method"}],"saveTopologyTemplateToRepository":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵr":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":20,"character":1}}],"members":{"togglePolicies":[{"__symbolic":"method"}],"toggleTargetLocations":[{"__symbolic":"method"}],"toggleProperties":[{"__symbolic":"method"}],"toggleRequirementsCapabilities":[{"__symbolic":"method"}],"toggleDeploymentArtifacts":[{"__symbolic":"method"}],"toggleIds":[{"__symbolic":"method"}],"toggleTypes":[{"__symbolic":"method"}],"executeLayout":[{"__symbolic":"method"}],"executeAlignH":[{"__symbolic":"method"}],"executeAlignV":[{"__symbolic":"method"}],"importTopology":[{"__symbolic":"method"}],"splitTopology":[{"__symbolic":"method"}],"matchTopology":[{"__symbolic":"method"}]},"statics":{"TOGGLE_POLICIES":"TOGGLE_POLICIES","TOGGLE_TARGET_LOCATIONS":"TOGGLE_TARGET_LOCATIONS","TOGGLE_PROPERTIES":"TOGGLE_PROPERTIES","TOGGLE_REQUIREMENTS_CAPABILITIES":"TOGGLE_REQUIREMENTS_CAPABILITIES","TOGGLE_DEPLOYMENT_ARTIFACTS":"TOGGLE_DEPLOYMENT_ARTIFACTS","TOGGLE_IDS":"TOGGLE_IDS","TOGGLE_TYPES":"TOGGLE_TYPES","EXECUTE_LAYOUT":"EXECUTE_LAYOUT","EXECUTE_ALIGN_H":"EXECUTE_ALIGN_H","EXECUTE_ALIGN_V":"EXECUTE_ALIGN_V","IMPORT_TOPOLOGY":"IMPORT_TOPOLOGY","SPLIT_TOPOLOGY":"SPLIT_TOPOLOGY","MATCH_TOPOLOGY":"MATCH_TOPOLOGY"}},"ɵs":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":45,"character":1},"arguments":[{"selector":"winery-node","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<div class=\"container rounded\"\n     style=\"padding: 3px; position: absolute; user-select: none;\"\n     [style.top]=\"nodeTemplate.y + 'px'\"\n     [style.left]=\"nodeTemplate.x + 'px'\"\n     [class.selected]=\"makeSelectionVisible\"\n     [class.unselected]=\"!makeSelectionVisible\"\n     id={{nodeTemplate.id}} [style.borderColor]=\"nodeTemplate.color\" [style.shadowColor]=\"nodeTemplate.color\"\n     (mousedown)=\"mouseDownHandler($event)\"\n     (mouseup)=\"mouseUpHandler($event)\"\n     [@onCreateNodeTemplateAnimation]='visibilityState'\n     [class.removeZIndex]=\"removeZIndex\">\n    <div *ngIf=\"nodeTemplate.state\" style=\"margin-bottom: 4px; padding-left: 4px;\">\n        {{ nodeTemplate.state }}\n    </div>\n    <div class=\"row rounded col-sm-12 node-template-header\"\n         (click)=\"openSidebar($event); closeConnectorEndpoints($event)\">\n        <div class=\"col-sm-1\" style=\"padding: 0;\">\n            <table class=\"table table-responsive table-active table-border--grey table-sm\">\n                <tr style=\"padding: 0\">\n                    <td class=\"td-maxinstances\"\n                        [class.flashminmax]=\"setMaxFlash\">{{nodeTemplate.maxInstances}}\n                    </td>\n                </tr>\n                <tr>\n                    <td class=\"table-spacer\"><br/></td>\n                </tr>\n                <tr style=\"padding: 0\">\n                    <td class=\"td-mininstances\"\n                        [class.flashminmax]=\"setMinFlash\">{{nodeTemplate.minInstances}}\n                    </td>\n                </tr>\n            </table>\n        </div>\n        <div class=\"col-sm-3\">\n            <img *ngIf=\"!nodeTemplate.imageUrl\" src=\"http://via.placeholder.com/50x50\"\n                 style=\"border-radius: 10%; margin-top: 1px; width: 50px; height: auto\">\n            <img *ngIf=\"nodeTemplate.imageUrl\" src=\"{{hostURL}}{{nodeTemplate.imageUrl}}\">\n        </div>\n        <div id=\"specifierDiv\" class=\"col-sm-8\" style=\"padding-left: 0; padding-right: 0;\">\n            <table class=\"header-table\" style=\"margin-left: 6px\">\n                <tr *ngIf=\"navbarButtonsState.buttonsState.idsButton\" class=\"\">\n                    <td class=\"td-value\" style=\"text-decoration: underline;\"\n                        [class.cell-with-comment]=\"isEllipsisActive(headerTableId)\">\n                        <div #headerTableId>{{nodeTemplate.id}}</div>\n                        <span class=\"cell-comment\">{{nodeTemplate.id}}</span>\n                    </td>\n                </tr>\n                <tr [class.flashit]=\"setFlash\" class=\"\">\n                    <td class=\"td-value\"\n                        [class.cell-with-comment]=\"isEllipsisActive(headerTableName)\">\n                        <div #headerTableName>{{nodeTemplate.name}}</div>\n                        <span class=\"cell-comment\">{{nodeTemplate.name}}</span>\n                    </td>\n                </tr>\n                <tr *ngIf=\"navbarButtonsState.buttonsState.typesButton\" class=\"\">\n                    <td class=\"td-value\"\n                        (click)=\"linkType($event)\"\n                        style=\"color: #0275d8;\"\n                        [class.cell-with-comment]=\"isEllipsisActive(headerTableType)\">\n                        <div #headerTableType>({{nodeTypeLocalName}})</div>\n                        <span class=\"cell-comment\">{{ (nodeTypeLocalName)}}</span>\n                    </td>\n                </tr>\n            </table>\n        </div>\n    </div>\n    <div class=\"endpointContainer center-block row\" style=\"border: 0; box-shadow: none\"\n         *ngIf=\"connectorEndpointVisible || !readonly\"\n         (mouseover)=\"makeSource($event)\">\n        <div class=\"btn-group-vertical btn-group-sm center-block\" role=\"group\" id={{dragSource}}\n             (mousedown)=\"passCurrentType($event)\">\n            <button *ngFor=\"let rel of relationshipTypes\"\n                    type=\"button\" class=\"btn btn-sm btn-outline-secondary btn-block\"\n                    [style.border-color]=\"this.nodeTemplate.color\" [style.color]=\"rel.color\"\n                    style=\"font-size: x-small;\">\n                <i class=\"fa fa-arrow-circle-o-right\" aria-hidden=\"true\" style=\"padding-left: 1em;\"></i> {{rel.id}}\n            </button>\n        </div>\n    </div>\n\n    <!-- Repaint jsPlumb on every accordion click -->\n    <accordion #accordion (click)=\"repaint($event)\">\n        <!-- PROPERTIES -->\n        <accordion-group\n            #propertiesgroup\n            panelClass=\"accordionGroupPanel\"\n            *ngIf=\"navbarButtonsState.buttonsState.propertiesButton\">\n            <div accordion-heading>\n                Properties\n                <i class=\"pull-sm-0 float-sm-right fa icon-styling padding-top--2px\"\n                   [ngClass]=\"{'fa-chevron-down': propertiesgroup?.isOpen, 'fa-chevron-right': !propertiesgroup?.isOpen}\"\n                ></i>\n            </div>\n            <winery-properties\n                [readonly]=\"readonly\"\n                (toggleModalHandler)=\"sendToggleAction($event)\"\n                [currentNodeData]=\"{entityTypes: entityTypes,\n                                    nodeTemplate: nodeTemplate,\n                                    propertyDefinitionType: propertyDefinitionType}\">\n            </winery-properties>\n        </accordion-group>\n\n        <!-- DEPLOYMENT ARTIFACTS -->\n        <accordion-group\n            #deploymentartifactsgroup\n            panelClass=\"accordionGroupPanel\"\n            *ngIf=\"navbarButtonsState.buttonsState.deploymentArtifactsButton\">\n            <div accordion-heading>\n                Deployment Artifacts\n                <i class=\"pull-sm-0 float-sm-right fa icon-styling padding-top--2px\"\n                   [ngClass]=\"{'fa-chevron-down': deploymentartifactsgroup?.isOpen,\n                   'fa-chevron-right': !deploymentartifactsgroup?.isOpen}\"\n                ></i>\n            </div>\n            <winery-deployment-artifacts\n                [readonly]=\"readonly\"\n                (toggleModalHandler)=\"sendToggleAction($event)\"\n                [currentNodeData]=\"{currentNodeId: nodeTemplate.id,\n                                    currentNodePart: 'DEPLOYMENT_ARTIFACTS',\n                                    currentProperties: nodeTemplate}\"\n                [deploymentArtifacts]=\"nodeTemplate.deploymentArtifacts?.deploymentArtifact\">\n            </winery-deployment-artifacts>\n        </accordion-group>\n\n        <!-- REQUIREMENTS-->\n        <accordion-group\n            #requirementsgroup\n            panelClass=\"accordionGroupPanel\"\n            *ngIf=\"navbarButtonsState.buttonsState.requirementsCapabilitiesButton\">\n            <div accordion-heading>\n                Requirements\n                <i class=\"pull-sm-0 float-sm-right fa icon-styling padding-top--2px\"\n                   [ngClass]=\"{'fa-chevron-down': requirementsgroup?.isOpen,\n           'fa-chevron-right': !requirementsgroup?.isOpen}\"\n                ></i>\n            </div>\n            <winery-requirements\n                [readonly]=\"readonly\"\n                (toggleModalHandler)=\"sendToggleAction($event)\"\n                [currentNodeData]=\"{entityTypes: entityTypes,\n                                    nodeTemplate: nodeTemplate,\n                                    currentNodePart: 'REQUIREMENTS'}\">\n            </winery-requirements>\n        </accordion-group>\n\n        <!-- CAPABILITIES -->\n        <accordion-group\n            #capabilitiesgroup\n            panelClass=\"accordionGroupPanel\"\n            *ngIf=\"navbarButtonsState.buttonsState.requirementsCapabilitiesButton\">\n            <div accordion-heading>\n                Capabilities\n                <i class=\"pull-sm-0 float-sm-right fa icon-styling padding-top--2px\"\n                   [ngClass]=\"{'fa-chevron-down': capabilitiesgroup?.isOpen,\n           'fa-chevron-right': !capabilitiesgroup?.isOpen}\"\n                ></i>\n            </div>\n            <winery-capabilities\n                [readonly]=\"readonly\"\n                (toggleModalHandler)=\"sendToggleAction($event)\"\n                [currentNodeData]=\"{entityTypes: entityTypes,\n                                    nodeTemplate: nodeTemplate,\n                                    currentNodePart: 'CAPABILITIES'}\">\n            </winery-capabilities>\n        </accordion-group>\n\n        <!-- POLICIES -->\n        <accordion-group\n            #policiesgroup\n            panelClass=\"accordionGroupPanel\"\n            *ngIf=\"navbarButtonsState.buttonsState.policiesButton\">\n            <div accordion-heading>\n                Policies\n                <i class=\"pull-sm-0 float-sm-right fa icon-styling padding-top--2px\"\n                   [ngClass]=\"{'fa-chevron-down': policiesgroup?.isOpen, 'fa-chevron-right': !policiesgroup?.isOpen}\">\n                </i>\n            </div>\n            <winery-policies\n                [readonly]=\"readonly\"\n                (toggleModalHandler)=\"sendToggleAction($event)\"\n                [currentNodeData]=\"{currentNodeId: nodeTemplate.id,\n                                    currentNodePart: 'POLICIES',\n                                    currentProperties: nodeTemplate}\"\n                [policies]=\"nodeTemplate.policies?.policy\">\n            </winery-policies>\n        </accordion-group>\n\n        <!-- TARGET LOCATIONS -->\n        <accordion-group\n            #targetlocationsgroup\n            panelClass=\"accordionGroupPanel\"\n            *ngIf=\"navbarButtonsState.buttonsState.targetLocationsButton\">\n            <div accordion-heading>\n                Target Locations\n                <i class=\"pull-sm-0 float-sm-right fa icon-styling padding-top--2px\"\n                   [ngClass]=\"{'fa-chevron-down': targetlocationsgroup?.isOpen,\n           'fa-chevron-right': !targetlocationsgroup?.isOpen}\">\n                </i>\n            </div>\n            <winery-target-locations\n                [readonly]=\"readonly\"\n                [currentNodeData]=\"{currentNodeId: nodeTemplate.id,\n                                    currentNodePart: 'TARGET_LOCATIONS',\n                                    currentTargetLocation: nodeTemplate.otherAttributes}\">\n            </winery-target-locations>\n        </accordion-group>\n    </accordion>\n</div>\n","styles":["div.container{-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;z-index:2;width:225px;font-size:small;box-shadow:0 1px 3px rgba(0,0,0,.12),0 1px 2px rgba(0,0,0,.24);background:#fff;cursor:move;border:2px solid #000;border-radius:1em;background-image:linear-gradient(to bottom,#fff 0,#ebf2f7 100%)}div.container:hover{box-shadow:0 7px 14px rgba(0,0,0,.25),0 5px 5px rgba(0,0,0,.22)}img{max-width:50px;max-height:50px;margin-top:.1em;border-radius:10%}.padding-top--2px{padding-top:2px}.icon-styling{color:rgba(200,200,200,1)}[draggable=true]{cursor:move}a{font-size:small;line-height:25%}.hidden{display:none}accordion-group{margin-top:.25em}p{line-height:22%}div.selected{background:#d8eeff;background-image:linear-gradient(to bottom,#fff 0,#ffd391 100%);border-radius:12px;margin:0}div.unselected{margin:0}.node-template-header{margin:0;display:flex;align-items:center;flex-wrap:wrap}.container rounded{pointer-events:auto;cursor:pointer}.endpointContainer{padding:0!important;margin:0}div.connectorEndpoint{cursor:pointer}div.connectorEndpoint:hover{cursor:pointer;background:#fff}div.connectorBox{height:15px;width:30px}div.connectorLabel{height:15px;line-height:16px;overflow:hidden!important;text-overflow:ellipsis!important}button.btn.btn-sm.btn-outline-secondary{background-color:rgba(237,234,230,1)!important;color:#000!important;cursor:copy;padding:0;border-radius:.4em;width:215px;text-align:left}button.btn.btn-sm.btn-outline-secondary:focus,button.btn.btn-sm.btn-outline-secondary:hover{background-color:rgba(255,255,255,1)!important;color:#212121!important}.relationship-button{border:1px solid;width:100%}"],"animations":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"trigger","line":271,"character":17},"arguments":["onCreateNodeTemplateAnimation",[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":272,"character":8},"arguments":["hidden",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":272,"character":24},"arguments":[{"opacity":0,"transform":"translateX(0)"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"state","line":273,"character":8},"arguments":["visible",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":273,"character":25},"arguments":[{"opacity":1,"transform":"scale"}]}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"transition","line":274,"character":8},"arguments":["hidden => visible",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"animate","line":274,"character":40},"arguments":["300ms",{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"keyframes","line":274,"character":57},"arguments":[[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":275,"character":12},"arguments":[{"opacity":0,"transform":"scale(0.2)","offset":0}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":276,"character":12},"arguments":[{"opacity":0.3,"transform":"scale(1.1)","offset":0.7}]},{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/animations","name":"style","line":277,"character":12},"arguments":[{"opacity":1,"transform":"scale(1.0)","offset":1}]}]]}]}]}]]}]}]}],"members":{"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":300,"character":5}}]}],"entityTypes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":301,"character":5}}]}],"dragSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":302,"character":5}}]}],"navbarButtonsState":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":303,"character":5}}]}],"sendId":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":304,"character":5}}]}],"askForRepaint":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":305,"character":5}}]}],"setDragSource":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":306,"character":5}}]}],"closedEndpoint":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":307,"character":5}}]}],"handleNodeClickedActions":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":308,"character":5}}]}],"updateSelectedNodes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":309,"character":5}}]}],"sendSelectedRelationshipType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":310,"character":5}}]}],"askForRemoval":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":311,"character":5}}]}],"unmarkConnections":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":312,"character":5}}]}],"saveNodeRequirements":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":313,"character":5}}]}],"sendPaletteStatus":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":314,"character":5}}]}],"sendNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":315,"character":5}}]}],"relationshipTypes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":316,"character":5}}]}],"nodeTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":317,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone","line":330,"character":30},{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":333,"character":30},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":335,"character":34},{"__symbolic":"reference","module":"@angular/core","name":"KeyValueDiffers","line":336,"character":33}]}],"addItem":[{"__symbolic":"method"}],"findOutPropertyDefinitionTypeForProperties":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngDoCheck":[{"__symbolic":"method"}],"sendToggleAction":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"repaint":[{"__symbolic":"method"}],"passCurrentType":[{"__symbolic":"method"}],"mouseDownHandler":[{"__symbolic":"method"}],"mouseMove":[{"__symbolic":"method"}],"mouseUpHandler":[{"__symbolic":"method"}],"flash":[{"__symbolic":"method"}],"closeConnectorEndpoints":[{"__symbolic":"method"}],"makeSource":[{"__symbolic":"method"}],"openSidebar":[{"__symbolic":"method"}],"linkType":[{"__symbolic":"method"}],"isEllipsisActive":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"testTimeDifference":[{"__symbolic":"method"}]}},"ɵt":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":53,"character":1},"arguments":[{"selector":"winery-canvas","providers":[{"__symbolic":"reference","name":"ɵu"}],"template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n<div id=\"container\" style=\"height: 100%; width: 100%\"\n     (mousedown)=\"showSelectionRange($event)\"\n     (click)=\"this.revalidateContainer()\">\n    <div id=\"grid\"\n         (mousedown)=\"trackTimeOfMouseDown()\"\n         (mouseup)=\"trackTimeOfMouseUp()\"\n         [class.crosshair]=\"this.gridTemplate.crosshair\"\n         [style.width.vw]=\"this.gridTemplate.gridDimension\"\n         [style.height.vh]=\"this.gridTemplate.gridDimension\"\n         [style.marginLeft.px]=\"this.gridTemplate.marginLeft\">\n        <div class=\"selection\" id=\"selection\"\n             [class.selection-active]=\"this.gridTemplate.selectionActive\"\n             [style.left.px]=\"this.gridTemplate.pageX\"\n             [style.top.px]=\"this.gridTemplate.pageY\"\n             [style.width.px]=\"this.gridTemplate.selectionWidth\"\n             [style.height.px]=\"this.gridTemplate.selectionHeight\"\n             #selection>\n            <span></span>\n        </div>\n    </div>\n    <div #nodes>\n        <winery-node *ngFor=\"let nodeTemplate of allNodeTemplates\"\n                     [readonly]=\"readonly\"\n                     [nodeTemplate]=\"nodeTemplate\"\n                     [entityTypes]=\"this.entityTypes\"\n                     [relationshipTypes]=\"relationshipTypes\"\n                     (sendId)=\"activateNewNode($event)\"\n                     [navbarButtonsState]=\"navbarButtonsState\"\n                     (askForRepaint)=\"revalidateContainer()\"\n                     (askForRemoval)=\"removeElement($event)\"\n                     (setDragSource)=\"setDragSource($event)\"\n                     (closedEndpoint)=\"toggleClosedEndpoint($event)\"\n                     (sendSelectedRelationshipType)=\"setSelectedRelationshipType($event)\"\n                     [dragSource]=\"nodeTemplate.id + '_Endpoint'\"\n                     (handleNodeClickedActions)=\"handleNodeClickedActions($event)\"\n                     (updateSelectedNodes)=\"updateSelectedNodes()\"\n                     (unmarkConnections)=\"unmarkConnections()\"\n                     (sendNodeData)=\"toggleModalHandler($event)\">\n        </winery-node>\n    </div>\n    <!-- workaround for a jsPlumb connection bug, where upon loading node templates without relationships\n        the two dummy points are connected, eluding the bug where no creation of connections are possible -->\n    <div id=\"dummy1\" style=\"width: 1px; height: 1px;\"></div>\n    <div id=\"dummy2\" style=\"width: 1px; height: 1px;\"></div>\n</div>\n\n<!-- CAPABILITIES MODAL -->\n<winery-modal *ngIf=\"!readonly\" bsModal #capabilitiesModal=\"bs-modal\" [modalRef]=\"capabilitiesModal\">\n    <winery-modal-header [title]=\"!showCurrentCapability?'Add Capability':'Modify/Delete Capability'\">\n    </winery-modal-header>\n    <winery-modal-body>\n        <form #capForm=\"ngForm\" id=\"addCapForm\" enctype=\"multipart/form-data\">\n            <fieldset>\n\n                <div class=\"form-group\" id=\"capIdGroup\">\n                    <label for=\"capId\" class=\"control-label\">Id:</label>\n                    <input [(ngModel)]=\"capabilities.capId\"\n                           id=\"capId\"\n                           class=\"form-control\"\n                           [class.duplicateId]=\"duplicateId\"\n                           name=\"capId\"\n                           type=\"text\"\n                           required\n                           (keyup)=\"onChangeCapId($event.target.value)\"\n                           #capId=\"ngModel\">\n                    <div [hidden]=\"capId.valid || capId.pristine\"\n                         class=\"alert alert-danger\">\n                        Id is required\n                    </div>\n                    <div class=\"idExists\" [hidden]=\"!duplicateId\"\n                         class=\"alert alert-danger\">\n                        Id already exists\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"CapNameChooser\" class=\"control-label\">Definition Name:</label>\n                    <div *ngIf=\"!showCurrentCapability;else disabledCapName\">\n                        <select [(ngModel)]=\"capabilities.capDefinitionName\"\n                                name=\"capName\"\n                                id=\"CapNameChooser\"\n                                class=\"form-control\"\n                                type=\"text\"\n                                required\n                                (change)=\"onChangeCapDefinitionName($event.target.value)\">\n                            <option *ngFor=\"let capDefinitionName of capabilities.capDefinitionNames\"\n                                    [value]=\"capDefinitionName\">{{ capDefinitionName }}\n                            </option>\n                        </select>\n                    </div>\n                    <ng-template #disabledCapName>\n                        <input [(ngModel)]=\"capabilities.capDefinitionName\"\n                               id=\"CapName\"\n                               class=\"form-control\"\n                               name=\"CapName\"\n                               type=\"text\"\n                               required\n                               disabled=\"disabled\"/>\n                    </ng-template>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"CapTypeDisplay\" class=\"control-label\">Cap Type:</label>\n                    <input id=\"CapTypeDisplay\"\n                           class=\"form-control\"\n                           type=\"text\"\n                           required\n                           name=\"CapTypeDisplay\"\n                           disabled=\"disabled\"\n                           [(ngModel)]=\"capabilities.capQNameLocalName\"/>\n                </div>\n\n                <div class=\"form-group\" *ngIf=\"showCurrentCapability || showDefaultProperties\">\n                    <div *ngIf=\"capabilities.propertyType === 'KV'\">\n                        <div *ngFor=\"let key of capabilities.properties | keysPipe\">\n                            <label for=\"CapKVPropertyDisplay\" class=\"control-label\">{{key.key}}</label>\n                            <textarea\n                                id=\"CapKVPropertyDisplay\"\n                                #KVTextareas\n                                style=\"width:100%; overflow-y: scroll;\"\n                                rows=\"1\"\n                                placeholder=\"Edit your value here.\"\n                                required\n                                value=\"{{key.value}}\">\n                                </textarea>\n                        </div>\n                    </div>\n                    <div *ngIf=\"capabilities.propertyType === 'XML'\">\n                        <label for=\"CapXMLPropertyDisplay\" class=\"control-label\">XML Property:</label>\n                        <textarea\n                            id=\"CapXMLPropertyDisplay\"\n                            #XMLTextareas\n                            style=\"width:100%; overflow-y: scroll;\"\n                            rows=\"10\"\n                            placeholder=\"Edit your value here.\"\n                            required\n                            value=\"{{capabilities.properties}}\">\n                </textarea>\n                    </div>\n                </div>\n            </fieldset>\n        </form>\n    </winery-modal-body>\n    <winery-modal-footer [showDefaultButtons]=\"false\">\n        <button type=\"button\" id=\"cancelCapabilities\" class=\"btn btn-default\"\n                (click)=\"closeAndResetCapabilities(); capForm.reset()\">Cancel\n        </button>\n        <button *ngIf=\"!showCurrentCapability; else deleteCapButton\"\n                (click)=\"saveCapabilityToModel(); capForm.reset()\" type=\"button\" id=\"addCapbtn\" class=\"btn btn-primary\"\n                [disabled]=\"!capForm.form.valid || duplicateId\">Add\n        </button>\n        <ng-template #deleteCapButton>\n            <button type=\"button\" id=\"updateCapabilitiesBtn\" (click)=\"updateCaps(); capForm.reset()\"\n                    class=\"btn btn-primary\" [disabled]=\"!capForm.form.valid || duplicateId\">Update\n            </button>\n            <button (click)=\"deleteCapability(); capForm.reset()\" type=\"button\" id=\"deleteCapbtn\"\n                    class=\"btn btn-primary\">Delete\n            </button>\n        </ng-template>\n    </winery-modal-footer>\n</winery-modal>\n\n<!-- REQUIREMENTS MODAL -->\n<winery-modal *ngIf=\"!readonly\" bsModal #requirementsModal=\"bs-modal\" [modalRef]=\"requirementsModal\">\n    <winery-modal-header [title]=\"!showCurrentRequirement?'Add Requirement':'Modify/Delete Requirement'\">\n    </winery-modal-header>\n    <winery-modal-body>\n        <form #reqForm=\"ngForm\" id=\"addReqForm\" enctype=\"multipart/form-data\">\n            <fieldset>\n\n                <div class=\"form-group\" id=\"ReqIdGroup\">\n                    <label for=\"reqId\" class=\"control-label\">Id:</label>\n                    <input [(ngModel)]=\"requirements.reqId\"\n                           id=\"reqId\"\n                           class=\"form-control\"\n                           [class.duplicateId]=\"duplicateId\"\n                           name=\"reqId\"\n                           type=\"text\"\n                           required\n                           (keyup)=\"onChangeReqId($event.target.value)\"\n                           #reqId=\"ngModel\">\n                    <div [hidden]=\"reqId.valid || reqId.pristine\"\n                         class=\"alert alert-danger\">\n                        Id is required\n                    </div>\n                    <div class=\"idExists\" [hidden]=\"!duplicateId\"\n                         class=\"alert alert-danger\">\n                        Id already exists\n                    </div>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"ReqNameChooser\" class=\"control-label\">Definition Name:</label>\n                    <div *ngIf=\"!showCurrentRequirement;else disabledReqName\">\n                        <select [(ngModel)]=\"requirements.reqDefinitionName\"\n                                id=\"ReqNameChooser\"\n                                name=\"ReqNameChooser\"\n                                class=\"form-control\"\n                                type=\"text\"\n                                required\n                                (change)=\"onChangeReqDefinitionName($event.target.value)\">\n                            <option *ngFor=\"let reqDefinitionName of requirements.reqDefinitionNames\"\n                                    [value]=\"reqDefinitionName\">\n                                {{reqDefinitionName}}\n                            </option>\n                        </select>\n                    </div>\n                    <ng-template #disabledReqName>\n                        <input [(ngModel)]=\"requirements.reqDefinitionName\"\n                               id=\"ReqName\"\n                               class=\"form-control\"\n                               name=\"ReqName\"\n                               type=\"text\"\n                               required=\"required\"\n                               disabled=\"disabled\"/>\n                    </ng-template>\n                </div>\n\n                <div class=\"form-group\">\n                    <label for=\"ReqTypeDisplay\" class=\"control-label\">Req Type:</label>\n                    <input [(ngModel)]=\"requirements.reqQNameLocalName\"\n                           id=\"ReqTypeDisplay\"\n                           name=\"ReqTypeDisplay\"\n                           class=\"form-control\"\n                           type=\"text\"\n                           required\n                           disabled=\"disabled\"/>\n                </div>\n                <div class=\"form-group\" *ngIf=\"showCurrentRequirement || showDefaultProperties\">\n                    <div *ngIf=\"requirements.propertyType === 'KV'\">\n                        <div *ngFor=\"let key of requirements.properties | keysPipe\">\n                            <label for=\"reqKVPropertyDisplay\" class=\"control-label\">{{key.key}}</label>\n                            <textarea\n                                id=\"reqKVPropertyDisplay\"\n                                #KVTextareas\n                                style=\"width:100%; overflow-y: scroll;\"\n                                rows=\"1\"\n                                placeholder=\"Edit your value here.\"\n                                required\n                                value=\"{{key.value}}\">\n                </textarea>\n                        </div>\n                    </div>\n                    <div *ngIf=\"requirements.propertyType === 'XML'\">\n                        <label for=\"ReqXMLPropertyDisplay\" class=\"control-label\">XML Property:</label>\n                        <textarea\n                            id=\"ReqXMLPropertyDisplay\"\n                            #XMLTextareas\n                            style=\"width:100%; overflow-y: scroll;\"\n                            rows=\"10\"\n                            placeholder=\"Edit your value here.\"\n                            required\n                            value=\"{{requirements.properties}}\">\n                </textarea>\n                    </div>\n                </div>\n            </fieldset>\n        </form>\n    </winery-modal-body>\n    <winery-modal-footer [showDefaultButtons]=\"false\">\n        <button type=\"button\" id=\"cancelRequirements\" class=\"btn btn-default\"\n                (click)=\"closeAndResetRequirements(); reqForm.reset()\">Cancel\n        </button>\n        <button *ngIf=\"!showCurrentRequirement; else deleteReqButton\"\n                (click)=\"saveRequirementsToModel(); reqForm.reset()\" type=\"button\" id=\"addReqbtn\"\n                class=\"btn btn-primary\" [disabled]=\"!reqForm.form.valid || duplicateId\">Add\n        </button>\n        <ng-template #deleteReqButton>\n            <button type=\"button\" id=\"updateRequirementsBtn\" (click)=\"updateReqs(); reqForm.reset()\"\n                    class=\"btn btn-primary\" [disabled]=\"!reqForm.form.valid || duplicateId\">Update\n            </button>\n            <button (click)=\"deleteRequirement(); reqForm.reset()\" type=\"button\" id=\"deleteReqBtn\"\n                    class=\"btn btn-primary\">Delete\n            </button>\n        </ng-template>\n    </winery-modal-footer>\n</winery-modal>\n\n<!-- IMPORT TOPOLOGY MODAL -->\n<winery-modal *ngIf=\"!readonly\" bsModal #importTopologyModal=\"bs-modal\" [modalRef]=\"importTopologyModal\">\n    <winery-modal-header [title]=\"'Select Topology to Import'\">\n    </winery-modal-header>\n    <winery-modal-body>\n        <form #importTopologyForm=\"ngForm\" id=\"importTopologyForm\" enctype=\"multipart/form-data\">\n            <fieldset>\n                <div class=\"form-group\">\n                    <label for=\"ImportTopology\" class=\"control-label\">Topology Template:</label>\n                    <select [(ngModel)]=\"importTopologyData.selectedTopologyTemplateId\"\n                            name=\"ImportTopology\"\n                            id=\"ImportTopology\"\n                            class=\"form-control\"\n                            type=\"text\"\n                            required\n                            (change)=\"onChangeTopologyTemplate($event.target.value)\">\n                        <option *ngFor=\"let topologyTemplate of importTopologyData.allTopologyTemplates\"\n                                [value]=\"topologyTemplate.id\">{{ topologyTemplate.id }}\n                        </option>\n                    </select>\n                    <div *ngIf=\"importTopologyData.topologySelected\" style=\"display: flex; justify-content: center; align-items: center\">\n                        <i class=\"fa fa-3x fa-refresh fa-spin\" style=\"max-width: 50%;\"></i>\n                    </div>\n                </div>\n            </fieldset>\n        </form>\n    </winery-modal-body>\n    <winery-modal-footer [showDefaultButtons]=\"false\">\n        <button type=\"button\" id=\"cancelImportTopology\" class=\"btn btn-default\" (click)=\"closeImportTopology();\n        importTopologyForm.reset()\">Cancel\n        </button>\n        <button (click)=\"importTopology(); importTopologyForm.reset()\"\n                type=\"button\" id=\"importTopologyBtn\" class=\"btn btn-primary\"\n                [disabled]=\"!importTopologyForm.form.valid || importTopologyData.topologySelected\">Add\n        </button>\n    </winery-modal-footer>\n</winery-modal>\n\n<winery-entities-modal *ngIf=\"!readonly\"\n                       [(modalVariantAndState)]=\"modalData\"\n                       [entityTypes]=\"entityTypes\"\n                       [currentNodeData]=\"currentModalData\">\n</winery-entities-modal>\n","styles":["@import url(https://fonts.googleapis.com/css?family=Roboto:900);.selection{position:absolute!important;border:1px dashed #8b9;background-color:#bec;opacity:.2;z-index:3;display:none;cursor:default!important}.crosshair{cursor:crosshair}.selection-active{display:block!important}.selection>span{background-color:rgba(239,28,190,.2);border:1px dashed #b20e8c;position:absolute;height:100%;width:100%}.watermark{opacity:.5;color:#000;position:absolute;bottom:2em;right:2em}#grid{position:absolute;z-index:2}.labelStyle path{font:11px Roboto,sans-serif;color:#212121;fill:#efefef;borderStyle:#fafafa;borderWidth:1;padding:3px}.ng-valid.required:not(.duplicateId),.ng-valid[required]:not(.duplicateId){border-left:5px solid #42a948}.duplicateId,.idExists,.ng-invalid:not(form){border-left:5px solid #a94442}"]}]}],"members":{"nodeComponentChildren":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":395,"character":5},"arguments":[{"__symbolic":"reference","name":"ɵs"}]}]}],"KVTextareas":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":396,"character":5},"arguments":["KVTextareas"]}]}],"xmlTextareas":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChildren","line":397,"character":5},"arguments":["XMLTextareas"]}]}],"child":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":398,"character":5},"arguments":["nodes"]}]}],"selection":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":399,"character":5},"arguments":["selection"]}]}],"capabilitiesModal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":400,"character":5},"arguments":["capabilitiesModal"]}]}],"requirementsModal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":401,"character":5},"arguments":["requirementsModal"]}]}],"importTopologyModal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":402,"character":5},"arguments":["importTopologyModal"]}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":403,"character":5}}]}],"entityTypes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":404,"character":5}}]}],"relationshipTypes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":405,"character":5}}]}],"diffMode":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":406,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵv"},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":475,"character":30},{"__symbolic":"reference","name":"ɵu"},{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵr"},{"__symbolic":"reference","module":"@angular/core","name":"NgZone","line":480,"character":30},{"__symbolic":"reference","module":"angular2-hotkeys","name":"HotkeysService","line":481,"character":40},{"__symbolic":"reference","module":"@angular/core","name":"Renderer2","line":482,"character":34},{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":483,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"KeyValueDiffers","line":484,"character":33},{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"ɵw"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵy"},{"__symbolic":"reference","name":"ɵz"},{"__symbolic":"reference","name":"ɵba"}]}],"onMouseUp":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":520,"character":5},"arguments":["mouseup"]}]}],"onMouseDown":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":530,"character":5},"arguments":["mousedown",["$event"]]}]}],"updateNodes":[{"__symbolic":"method"}],"toggleMarkNode":[{"__symbolic":"method"}],"setPaletteState":[{"__symbolic":"method"}],"getAllIds":[{"__symbolic":"method"}],"setId":[{"__symbolic":"method"}],"toggleModalHandler":[{"__symbolic":"method"}],"setDefaultCapKVProperties":[{"__symbolic":"method"}],"setDefaultReqKVProperties":[{"__symbolic":"method"}],"setDefaultCapXMLProperties":[{"__symbolic":"method"}],"setDefaultReqXMLProperties":[{"__symbolic":"method"}],"setKVProperties":[{"__symbolic":"method"}],"updateCaps":[{"__symbolic":"method"}],"updateReqs":[{"__symbolic":"method"}],"getHostUrl":[{"__symbolic":"method"}],"saveCapabilityToModel":[{"__symbolic":"method"}],"onChangeCapDefinitionName":[{"__symbolic":"method"}],"onChangeCapId":[{"__symbolic":"method"}],"deleteCapability":[{"__symbolic":"method"}],"saveRequirementsToModel":[{"__symbolic":"method"}],"onChangeReqDefinitionName":[{"__symbolic":"method"}],"onChangeReqId":[{"__symbolic":"method"}],"deleteRequirement":[{"__symbolic":"method"}],"resetRequirements":[{"__symbolic":"method"}],"closeAndResetRequirements":[{"__symbolic":"method"}],"resetCapabilities":[{"__symbolic":"method"}],"closeAndResetCapabilities":[{"__symbolic":"method"}],"moveNewNode":[{"__symbolic":"method"}],"positionNewNode":[{"__symbolic":"method"}],"updateRelationships":[{"__symbolic":"method"}],"handleNewRelationship":[{"__symbolic":"method"}],"updateRelName":[{"__symbolic":"method"}],"setButtonsState":[{"__symbolic":"method"}],"onChangeTopologyTemplate":[{"__symbolic":"method"}],"closeImportTopology":[{"__symbolic":"method"}],"importTopology":[{"__symbolic":"method"}],"revalidateContainer":[{"__symbolic":"method"}],"updateAllNodes":[{"__symbolic":"method"}],"setNewCoordinates":[{"__symbolic":"method"}],"updateSelectedNodes":[{"__symbolic":"method"}],"paintRelationship":[{"__symbolic":"method"}],"manageRelationships":[{"__symbolic":"method"}],"resetDragSource":[{"__symbolic":"method"}],"toggleClosedEndpoint":[{"__symbolic":"method"}],"setDragSource":[{"__symbolic":"method"}],"handleDeleteKeyEvent":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":1597,"character":5},"arguments":["document:keydown.delete",["$event"]]}]}],"clearSelectedNodes":[{"__symbolic":"method"}],"showSelectionRange":[{"__symbolic":"method"}],"openSelector":[{"__symbolic":"method"}],"selectElements":[{"__symbolic":"method"}],"adjustGrid":[{"__symbolic":"method","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"HostListener","line":1735,"character":5},"arguments":["window:scroll",["event"]]}]}],"hideSidebar":[{"__symbolic":"method"}],"handleNodeClickedActions":[{"__symbolic":"method"}],"arrayContainsNode":[{"__symbolic":"method"}],"unbindDragSource":[{"__symbolic":"method"}],"unbindConnection":[{"__symbolic":"method"}],"unmarkConnections":[{"__symbolic":"method"}],"assignRelTypes":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngDoCheck":[{"__symbolic":"method"}],"setSelectedRelationshipType":[{"__symbolic":"method"}],"removeElement":[{"__symbolic":"method"}],"activateNewNode":[{"__symbolic":"method"}],"removeDragSource":[{"__symbolic":"method"}],"trackTimeOfMouseDown":[{"__symbolic":"method"}],"trackTimeOfMouseUp":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}],"handleNewNode":[{"__symbolic":"method"}],"handleDeletedNodes":[{"__symbolic":"method"}],"updateNodeAttributes":[{"__symbolic":"method"}],"handleRelSideBar":[{"__symbolic":"method"}],"unbindAll":[{"__symbolic":"method"}],"isObjectInSelection":[{"__symbolic":"method"}],"handleCtrlKeyNodePress":[{"__symbolic":"method"}],"handleNodePressActions":[{"__symbolic":"method"}],"enhanceDragSelection":[{"__symbolic":"method"}],"getNodeByID":[{"__symbolic":"method"}],"bindConnection":[{"__symbolic":"method"}],"bindNewNode":[{"__symbolic":"method"}],"determineDragOrClick":[{"__symbolic":"method"}],"layoutTopology":[{"__symbolic":"method"}]}},"ɵu":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Directive","line":22,"character":1},"arguments":[{"selector":"[wineryLayout]"}]}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":33,"character":31},{"__symbolic":"reference","module":"@angular/core","name":"ElementRef","line":34,"character":31}]}],"setJsPlumbInstance":[{"__symbolic":"method"}],"layoutNodes":[{"__symbolic":"method"}],"applyPositions":[{"__symbolic":"method"}],"align":[{"__symbolic":"method"}],"repaintEverything":[{"__symbolic":"method"}]}},"ɵv":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":21,"character":1}}],"members":{"getJsPlumbInstance":[{"__symbolic":"method"}]}},"ɵw":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":19,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":21,"character":31}]}],"importTopologyTemplate":[{"__symbolic":"method"}]}},"ɵx":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":12,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http","line":15,"character":30}]}],"check":[{"__symbolic":"method"}]}},"ɵy":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":8,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":11,"character":31}]}],"splitTopology":[{"__symbolic":"method"}],"matchTopology":[{"__symbolic":"method"}]}},"ɵz":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":21,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/common/http","name":"HttpClient","line":30,"character":30}]}],"requestRequirementDefinitionsOfNodeType":[{"__symbolic":"method"}],"requestCapabilityDefinitionsOfNodeType":[{"__symbolic":"method"}]}},"ɵba":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":19,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":22,"character":29}]}],"handleError":[{"__symbolic":"method"}]}},"ɵbb":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":29,"character":1},"arguments":[{"selector":"winery-topology-renderer","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n<div *ngIf=\"loader?.generatedReduxState\">\n    <winery-navbar\n        [readonly]=\"readonly\"\n        [hideNavBarState]=\"hideNavBarState\">\n    </winery-navbar>\n    <winery-canvas [readonly]=\"readonly\"\n                   [entityTypes]=\"entityTypes\"\n                   [relationshipTypes]=\"relationshipTypes\"\n                   [diffMode]=\"diffMode\">\n    </winery-canvas>\n\n    <div *ngIf=\"diffMode\" style=\"position: fixed; right: 0;\" class=\"sidebar-root\">\n        <h5 [style.margin.px]=\"15\">Diff Legend</h5>\n        <ul>\n            <li>Green elements -> added</li>\n            <li>Yellow elements -> changed</li>\n            <li>Red elements -> removed</li>\n        </ul>\n    </div>\n</div>\n","styles":["winery-navbar{position:fixed;top:0;width:100%;z-index:700}winery-canvas{width:100%;padding-top:47px}"]}]}],"members":{"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":69,"character":5}}]}],"entityTypes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":70,"character":5}}]}],"relationshipTypes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":71,"character":5}}]}],"differencesData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":72,"character":5}}]}],"nodeTemplates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":73,"character":5}}]}],"relationshipTemplates":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":74,"character":5}}]}],"generatedReduxState":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":75,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","module":"@angular/core","name":"ViewContainerRef","line":87,"character":21},{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":88,"character":32}]}],"ngOnInit":[{"__symbolic":"method"}],"generateDiffTopology":[{"__symbolic":"method"}],"addElementsToRedux":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵbc":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"winery-properties","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n<winery-properties-content\n    [readonly]=\"readonly\"\n    [currentNodeData]=\"currentNodeData\">\n</winery-properties-content>\n","styles":["textarea{pointer-events:auto;resize:none;margin-left:5px;width:100%;overflow:hidden!important}"]}]}],"members":{"currentNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":41,"character":5}}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":42,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵbd":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"winery-requirements","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<div id=\"requirementDiv\" *ngIf=\"requirementsExist\">\n    <winery-toscatype-table\n        [toscaType]=\"'Requirements'\"\n        [currentNodeData]=\"currentNodeData\"\n        [toscaTypeData]=\"requirements\"\n        (showClickedReqOrCapModal)=\"toggleModal($event)\">\n    </winery-toscatype-table>\n</div>\n\n<div *ngIf=\"!requirementsExist\" style=\"color: dimgray; text-align: center\">\n    <span>No requirements defined <br> at the NodeType.</span></div>\n\n<div *ngIf=\"!readonly\" (click)=\"toggleModal($event);\" class=\"btn btn-sm btn-modal\" style=\"display: block;\">\n    Add new Requirement\n</div>\n\n","styles":["table{table-layout:fixed;width:100%}.dataId:hover,.dataName:hover,.dataType:hover{background-color:#ffc;overflow:visible;display:inline-block}.dataId:hover~.dataName,.dataId:hover~.dataType,.dataName:hover~.dataType{visibility:hidden}td{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}tr:nth-child(even){background-color:#f2f2f2}"]}]}],"members":{"toggleModalHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":61,"character":5}}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":5}}]}],"currentNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":63,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]}]}],"updateReqs":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"toggleModal":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵbe":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"winery-target-locations","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<div style=\"color: dimgray; text-align: center\">\n    <span>\n    <textarea\n        style=\"width:100%; overflow-y: scroll;\"\n        rows=\"6\"\n        placeholder=\"Edit your location here.\"\n        required\n        value=\"{{targetLocation}}\"\n        [disabled]=\"readonly\"\n        (mousedown)=\"$event.stopPropagation()\"\n        (keyup)=\"properties.next($event.target.value)\">\n    </textarea>\n    </span>\n</div>\n","styles":[""]}]}],"members":{"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":57,"character":5}}]}],"currentNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":58,"character":5}}]}],"sendTargetLocation":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":59,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","name":"ɵh"}]}],"ngOnChanges":[{"__symbolic":"method"}],"checkForTargetLocations":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵbf":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":16,"character":1},"arguments":[{"selector":"winery-policies","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<winery-toscatype-table\n    [toscaType]=\"'policies'\"\n    [currentNodeData]=\"currentNodeData\"\n    [toscaTypeData]=\"policies\">\n</winery-toscatype-table>\n\n<div *ngIf=\"!readonly\" (click)=\"toggleModal($event);\" class=\"btn btn-sm btn-modal\" style=\"display: block;\">\n    Add new Policy\n</div>\n\n\n\n\n","styles":["winery-modal{clear:both;opacity:1}"]}]}],"members":{"toggleModalHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":52,"character":5}}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":53,"character":5}}]}],"currentNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":5}}]}],"policies":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor"}],"toggleModal":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵbg":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":18,"character":1},"arguments":[{"selector":"winery-deployment-artifacts","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<winery-toscatype-table\n    [toscaType]=\"'deploymentArtifacts'\"\n    [currentNodeData]=\"currentNodeData\"\n    [toscaTypeData]=\"deploymentArtifacts\">\n</winery-toscatype-table>\n\n<div *ngIf=\"!readonly\" class=\"button-wrapper\">\n    <div (click)=\"toggleModal($event);\" class=\"btn btn-sm btn-modal\" style=\"display: block;\">\n        Add new Deployment Artifact\n    </div>\n</div>\n\n","styles":[""]}]}],"members":{"toggleModalHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":53,"character":5}}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":54,"character":5}}]}],"currentNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":55,"character":5}}]}],"deploymentArtifacts":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":56,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]}]}],"toggleModal":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}]}},"ɵbh":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"winery-capabilities","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n\n<div *ngIf=\"capabilitiesExist\">\n    <winery-toscatype-table\n        [toscaType]=\"'Capabilities'\"\n        [currentNodeData]=\"currentNodeData\"\n        [toscaTypeData]=\"capabilities\"\n        (showClickedReqOrCapModal)=\"toggleModal($event)\">\n    </winery-toscatype-table>\n</div>\n\n<div *ngIf=\"!capabilitiesExist\" style=\"color: dimgray; text-align: center\">\n    <span>No capabilities defined <br> at the NodeType.</span></div>\n\n<div *ngIf=\"!readonly\" (click)=\"toggleModal($event);\" class=\"btn btn-sm btn-modal\" style=\"display: block;\">\n    Add new Capability\n</div>\n","styles":["table{table-layout:fixed;width:100%}.dataId:hover,.dataName:hover,.dataType:hover{background-color:#ffc;overflow:visible;display:inline-block}.dataId:hover~.dataName,.dataId:hover~.dataType,.dataName:hover~.dataType{visibility:hidden}td{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}tr:nth-child(even){background-color:#f2f2f2}"]}]}],"members":{"toggleModalHandler":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":60,"character":5}}]}],"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":61,"character":5}}]}],"currentNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":62,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]}]}],"updateCaps":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"toggleModal":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵbi":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":24,"character":1},"arguments":[{"selector":"winery-properties-content","template":"<!--\n * Copyright (c) 2017-2018 Contributors to the Eclipse Foundation\n *\n * See the NOTICE file(s) distributed with this work for additional\n * information regarding copyright ownership.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n * which is available at https://www.apache.org/licenses/LICENSE-2.0.\n *\n * SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n-->\n<div *ngIf=\"!currentNodeData.propertyDefinitionType\" style=\"display: flex; justify-content: center; align-items: center\">\n    <i class=\"fa fa-3x fa-refresh fa-spin\" style=\"max-width: 50%;\"></i>\n</div>\n<table *ngIf=\"currentNodeData.propertyDefinitionType == 'KV'\" class=\"table table-border--grey table-sm body-table\">\n    <tr>\n        <th>\n            Key\n        </th>\n        <th>\n            Values\n        </th>\n    <tr *ngFor=\"let key of nodeProperties | keysPipe\">\n        <td class=\"\">{{key.key}}</td>\n        <td class=\"\">\n                <textarea\n                    style=\"width:100%; overflow-y: scroll;\"\n                    rows=\"1\"\n                    placeholder=\"Edit your value here.\"\n                    required\n                    [disabled]=\"readonly\"\n                    value=\"{{key.value}}\"\n                    (keyup)=\"properties.next($event.target.value)\"\n                    (keyup)=\"keyOfEditedKVProperty.next(key.key)\">\n                </textarea>\n        </td>\n    </tr>\n</table>\n\n<div *ngIf=\"currentNodeData.propertyDefinitionType == 'XML'\">\n    <textarea\n        style=\"width:100%; overflow-y: scroll;\"\n        rows=\"6\"\n        placeholder=\"Edit your XML here.\"\n        required\n        [disabled]=\"readonly\"\n        value=\"{{nodeProperties}}\"\n        (keyup)=\"properties.next($event.target.value)\">\n    </textarea>\n</div>\n\n<div *ngIf=\"currentNodeData.propertyDefinitionType == 'NONE'\" style=\"color: dimgray; text-align: center\">\n    <span>No properties defined <br> at the NodeType.</span></div>\n","styles":["textarea{overflow:hidden}"]}]}],"members":{"readonly":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":88,"character":5}}]}],"currentNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":89,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵv"}]}],"ngOnChanges":[{"__symbolic":"method"}],"ngOnInit":[{"__symbolic":"method"}],"ngOnDestroy":[{"__symbolic":"method"}]}},"ɵbj":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":22,"character":1},"arguments":[{"selector":"winery-toscatype-table","template":"<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ~ Copyright (c) 2018 Contributors to the Eclipse Foundation\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->\n\n<table *ngIf=\"toscaType==='deploymentArtifacts'\" class=\"toscatype-table\" border=\"1\" style=\"\">\n    <thead>\n    <tr>\n        <th>Name</th>\n        <th>DA-Ref</th>\n        <th>Type</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let da of currentToscaTypeData\">\n        <td class=\"toscatype-table-td\"\n            [class.cell-with-comment]=\"isEllipsisActive(daname)\">\n            <div #daname (click)=\"openDeploymentArtifactModal(da)\">{{ da.name }}</div>\n            <span class=\"cell-comment\">{{ da.name }}</span>\n        </td>\n        <td class=\"toscatype-table-td\"\n            [class.cell-with-comment]=\"isEllipsisActive(daref)\">\n            <div #daref (click)=\"clickArtifactRef(da.artifactRef)\">{{ da.artifactRef | localname }}</div>\n            <span class=\"cell-comment\">{{ da.artifactRef | localname }}</span>\n        </td>\n        <td class=\"toscatype-table-td\"\n            [class.cell-with-comment]=\"isEllipsisActive(datype)\">\n            <div #datype (click)=\"clickArtifactType(da.artifactType)\">{{ da.artifactType | localname }}</div>\n            <span class=\"cell-comment\">{{ da.artifactType | localname }}</span>\n        </td>\n    </tr>\n    </tbody>\n</table>\n\n<table *ngIf=\"toscaType==='policies'\" class=\"toscatype-table\" border=\"1\">\n    <thead>\n    <tr>\n        <th>Name</th>\n        <th>Policy</th>\n        <th>Type</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let pol of currentToscaTypeData\">\n        <td class=\"toscatype-table-td\"\n            [class.cell-with-comment]=\"isEllipsisActive(pname)\">\n            <div #pname (click)=\"openPolicyModal(pol)\">{{ pol.name }}</div>\n            <span class=\"cell-comment\">{{ pol.name }}</span>\n        </td>\n        <td class=\"toscatype-table-td\"\n            [class.cell-with-comment]=\"isEllipsisActive(pref)\">\n            <div #pref (click)=\"clickPolicyRef(pol.policyRef)\">{{ pol.policyRef | localname }}</div>\n            <span class=\"cell-comment\">{{ pol.policyRef | localname }}</span>\n\n        </td>\n        <td class=\"toscatype-table-td\"\n            [class.cell-with-comment]=\"isEllipsisActive(ptype)\">\n            <div #ptype (click)=\"clickPolicyType(pol.policyType)\">{{ pol.policyType | localname }}</div>\n            <span class=\"cell-comment\">{{ pol.policyType | localname }}</span>\n        </td>\n    </tr>\n    </tbody>\n</table>\n\n<table *ngIf=\"toscaType==='Capabilities' || toscaType==='Requirements'\" class=\"toscatype-table\">\n    <thead>\n    <tr>\n        <th>Id</th>\n        <th>Name</th>\n        <th>Type</th>\n    </tr>\n    </thead>\n    <tbody>\n    <tr *ngFor=\"let reqOrCap of currentToscaTypeData\">\n        <td class=\"toscatype-table-td\"\n            [class.cell-with-comment]=\"isEllipsisActive(reqOrCapName)\">\n            <div #reqOrCapName (click)=\"showExistingReqOrCapModal($event)\">{{ reqOrCap.id }}</div>\n            <span class=\"cell-comment\">{{ reqOrCap.name }}</span>\n        </td>\n        <td class=\"toscatype-table-td\"\n            [class.cell-with-comment]=\"isEllipsisActive(reqOrCapRef)\">\n            <div #reqOrCapRef (click)=\"clickReqOrCapRef(reqOrCap.name)\">{{ reqOrCap.name }}</div>\n            <span class=\"cell-comment\">{{ reqOrCap.name }}</span>\n        </td>\n        <td class=\"toscatype-table-td\"\n            [class.cell-with-comment]=\"isEllipsisActive(reqOrCapType)\">\n            <div #reqOrCapType (click)=\"clickReqOrCapType(reqOrCap.type)\">{{ reqOrCap.type | localname }}</div>\n            <span class=\"cell-comment\">{{ reqOrCap.type | localname }}</span>\n        </td>\n    </tr>\n    </tbody>\n</table>\n","styles":[".toscatype-table{width:210px;table-layout:fixed}table{border:0}th{background-color:#cfd8dc;color:#000;text-align:center}td,th{border-top:0;border-left:0;border-right:0;border-bottom:1px solid #ddd}tr{cursor:pointer}tr:nth-child(even){background-color:#f2f2f2}.toscatype-table-td div{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;position:relative;width:auto;max-width:100%;transition:max-width linear 1ms}.cell-with-comment{position:relative}.cell-comment{display:none;position:absolute;z-index:100;border:1px solid #424242;border-radius:.4em;background-color:#efefef;padding:3px;color:#000;width:auto;left:2em;top:2em}.cell-with-comment:hover span.cell-comment{display:block}.button-wrapper{margin:10px 0 5px;display:flex;justify-content:center}.toscatype-table-td:hover div:before{background-color:#fff;border:1px solid #ddd;content:\"\";height:100%;display:block;left:0;top:0;width:100%;position:absolute;z-index:-1;-webkit-user-select:all;-moz-user-select:all;-ms-user-select:all;user-select:all}"]}]}],"members":{"toscaType":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":130,"character":5}}]}],"currentNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":131,"character":5}}]}],"toscaTypeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":132,"character":5}}]}],"showClickedReqOrCapModal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":135,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵbk"},{"__symbolic":"reference","name":"ɵd"}]}],"ngOnInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"isEllipsisActive":[{"__symbolic":"method"}],"getLocalName":[{"__symbolic":"method"}],"getNamespace":[{"__symbolic":"method"}],"clickArtifactRef":[{"__symbolic":"method"}],"clickArtifactType":[{"__symbolic":"method"}],"clickPolicyRef":[{"__symbolic":"method"}],"clickPolicyType":[{"__symbolic":"method"}],"openPolicyModal":[{"__symbolic":"method"}],"openDeploymentArtifactModal":[{"__symbolic":"method"}],"showExistingReqOrCapModal":[{"__symbolic":"method"}],"clickReqOrCapRef":[{"__symbolic":"method"}],"clickReqOrCapType":[{"__symbolic":"method"}]}},"ɵbk":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Injectable","line":24,"character":1}}],"members":{"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/http","name":"Http","line":34,"character":30}]}],"requestNamespaces":[{"__symbolic":"method"}]}},"ɵbl":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":34,"character":1},"arguments":[{"selector":"winery-entities-modal","template":"<!--~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  ~ Copyright (c) 2018 Contributors to the Eclipse Foundation\n  ~\n  ~ See the NOTICE file(s) distributed with this work for additional\n  ~ information regarding copyright ownership.\n  ~\n  ~ This program and the accompanying materials are made available under the\n  ~ terms of the Eclipse Public License 2.0 which is available at\n  ~ http://www.eclipse.org/legal/epl-2.0, or the Apache Software License 2.0\n  ~ which is available at https://www.apache.org/licenses/LICENSE-2.0.\n  ~\n  ~ SPDX-License-Identifier: EPL-2.0 OR Apache-2.0\n  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~-->\n\n<!-- GENERIC MODAL -->\n<winery-modal *ngIf=\"modalVariantAndState.modalVisible\"\n              bsModal #modal=\"bs-modal\" [modalRef]=\"modal\" [size]=\"'modal-lg'\" (onHidden)=\"resetModalData()\">\n    <winery-modal-header *ngIf=\"modalVariantAndState.modalVariant === 'deployment_artifacts' ||\n                                modalVariantAndState.modalVariant === 'policies'\"\n                         [title]=\"'Add ' + modalVariantAndState.modalTitle\" [modalRef]=\"modal\">\n    </winery-modal-header>\n    <!-- DEPLOYMENT_ARTIFACT OR POLICY BODY -->\n    <winery-modal-body>\n        <form #addDeploymentArtifactOrPolicyForm=\"ngForm\" id=\"addDeploymentArtifactOrPolicyForm\"\n              enctype=\"multipart/form-data\">\n            <fieldset>\n                <div class=\"form-group\">\n                    <label>Name</label>\n                    <input [(ngModel)]=\"deploymentArtifactOrPolicyModalData.modalName\" class=\"form-control\"\n                           name=\"modalName\"\n                           required\n                           [disabled]=\"modalVariantForEditDeleteTasks !== '(none)'\"\n                           id=\"modalName\" type=\"text\" autocomplete=\"on\"/>\n                </div>\n                <div class=\"radio\"\n                     *ngIf=\"modalVariantAndState.modalVariant === 'deployment_artifacts' && modalVariantForEditDeleteTasks === '(none)'\">\n                    <label>\n                        <input type=\"radio\" name=\"templateCreation\" value=\"createArtifactTemplate\"\n                               checked=\"checked\" id=\"createArtifactTemplateInput\"\n                               [(ngModel)]=\"modalSelectedRadioButton\"/>Create Artifact Template\n                    </label>\n                    <p class=\"help-block\">If you want to add files to this deployment artifact you can do so via <a\n                        target=\"_blank\" href=\"{{getHostUrl()+'#/artifacttemplates'}}\">Winery's management UI</a>,\n                        after creating this deployment artifact.</p>\n                </div>\n                <div class=\"radio\" *ngIf=\"modalVariantForEditDeleteTasks === '(none)'\">\n                    <label>\n                        <input type=\"radio\" name=\"templateCreation\" value=\"link{{modalVariantAndState.modalVariant}}\"\n                               id=\"linkArtifactTemplateOrPolicyTemplateInput\"\n                               [(ngModel)]=\"modalSelectedRadioButton\"/>\n                        <div *ngIf=\"modalVariantAndState.modalVariant === 'deployment_artifacts'\"\n                             style=\"display: inline-block;\">Link Artifact Template\n                        </div>\n                        <div *ngIf=\"modalVariantAndState.modalVariant === 'policies'\" style=\"display: inline-block;\">\n                            Link Policy Template\n                        </div>\n                    </label>\n                    <p class=\"help-block\">Check if you want to reuse existing files.</p>\n                </div>\n                <div class=\"radio\" *ngIf=\"modalVariantForEditDeleteTasks === '(none)'\">\n                    <label style=\"margin-bottom: 1em;\">\n                        <input type=\"radio\" name=\"templateCreation\" value=\"skip{{modalVariantAndState.modalVariant}}\"\n                               id=\"skipArtifactTemplateOrPolicyTemplateInput\"\n                               [(ngModel)]=\"modalSelectedRadioButton\"/>\n                        Do not create a template.\n                    </label>\n                    <p *ngIf=\"modalVariantAndState.modalVariant === 'deployment_artifacts'\"\n                       class=\"help-block\">Check if you want to point to an image library.</p>\n                </div>\n            </fieldset>\n            <fieldset>\n                <div class=\"form-group-grouping\"\n                     *ngIf=\"modalSelectedRadioButton === 'createArtifactTemplate' && modalVariantAndState.modalVariant === 'deployment_artifacts'\">\n\n                    <!-- createArtifactTemplate class is required for artifactcreationdialog -->\n                    <div class=\"form-group createArtifactTemplate\">\n                        <label for=\"artifactTemplateNS\" class=\"control-label\">Namespace</label>\n                        <input [(ngModel)]=\"deploymentArtifactOrPolicyModalData.modalTemplateNameSpace\" type=\"text\"\n                               class=\"form-control\"\n                               name=\"artifactTemplateNS\"\n                               id=\"artifactTemplateNS\"\n                               (keyup)=\"checkIfArtifactTemplateAlreadyExists($event, 'namespace')\"\n                               [typeahead]=\"allNamespaces\"\n                               typeaheadOptionField=\"namespace\"/>\n                    </div>\n\n                    <!-- createArtifactTemplate class is required for artifactcreationdialog -->\n                    <div class=\"form-group createArtifactTemplate\">\n                        <label>Artifact Template Name</label>\n                        <!-- name is an NCName -->\n                        <input [(ngModel)]=\"deploymentArtifactOrPolicyModalData.modalTemplateName\"\n                               class=\"artifactData form-control\"\n                               id=\"artifactTemplateName\" name=\"artifactTemplateName\" type=\"text\" required\n                               autocomplete=\"on\"\n                               (keyup)=\"checkIfArtifactTemplateAlreadyExists($event, 'templateName')\"\n                               placeholder=\"Enter a name for the Artifact Template\"\n                               #artifactTemplateName=\"ngModel\"/>\n                        <div id=\"artifactTemplateNameIsValid\" class=\"invalid\">\n                            <span id=\"artifactTemplateNameIsInvalidReason\"></span>\n                        </div>\n                        <div class=\"alert alert-info\"\n                             *ngIf=\"artifactTemplateAlreadyExists && (artifactTemplateName.dirty || artifactTemplateName.touched) &&\n                            artifactTemplateName.valid\">\n                            Artifact Template with this name already exists.\n                        </div>\n                        <div class=\"alert alert-success\"\n                             *ngIf=\"!artifactTemplateAlreadyExists && (artifactTemplateName.dirty || artifactTemplateName.touched) &&\n                            artifactTemplateName.valid\">\n                            Will be created.\n                        </div>\n                    </div>\n                </div>\n                <!-- link ArtifactTemplate or PolicyTemplate -->\n                <ng-container *ngIf=\"modalSelectedRadioButton === 'linkdeployment_artifacts' ||\n                                     modalSelectedRadioButton === 'linkpolicies' ||\n                                     modalVariantForEditDeleteTasks !== '(none)'\">\n                    <div id=\"linkArtifactTemplateOrPolicyTemplate\" class=\"form-group\">\n                        <label *ngIf=\"modalVariantAndState.modalVariant === 'deployment_artifacts' ||\n                                      modalVariantForEditDeleteTasks === 'deployment_artifacts'\"\n                               for=\"artifactTemplateOrPolicyTemplateToLink\">Artifact Template</label>\n                        <label *ngIf=\"modalVariantAndState.modalVariant === 'policies' ||\n                                      modalVariantForEditDeleteTasks === 'policies'\"\n                               for=\"artifactTemplateOrPolicyTemplateToLink\">Policy Template</label>\n                        <input type=\"text\"\n                               class=\"form-control\"\n                               *ngIf=\"modalVariantForEditDeleteTasks !== '(none)'\"\n                               [disabled]=\"modalVariantForEditDeleteTasks !== '(none)'\"\n                               [value]=\"deploymentArtifactOrPolicyModalData.modalTemplateName\">\n                        <div id=\"artifactTemplateOrPolicyTemplateToLinkDiv\"\n                             *ngIf=\"modalVariantForEditDeleteTasks === '(none)'\">\n                            <select id=artifactTemplateOrPolicyTemplateToLink name=\"artifactTemplateOrPolicyTemplate\"\n                                    class=\"form-control\"\n                                    [(ngModel)]=\"defaultValue\"\n                                    required\n                                    (change)=\"updatedTemplateToBeLinkedInModal($event.target.value, modalVariantAndState.modalVariant)\">\n                                <ng-container *ngIf=\"modalVariantAndState.modalVariant === 'deployment_artifacts'\">\n                                    <option *ngIf=\"deploymentArtifactOrPolicyModalData.artifactTemplates === undefined\"\n                                            value=\"null\" disabled=\"true\" [selected]=\"true\">Artifact Templates are still\n                                        loading...\n                                    </option>\n\n                                    <option\n                                        *ngFor=\"let artifactTemplate of deploymentArtifactOrPolicyModalData.artifactTemplates\"\n                                        [value]=\"artifactTemplate | json\"\n                                        [disabled]=\"modalVariantForEditDeleteTasks !== '(none)'\">\n                                        {{artifactTemplate.name}}\n                                    </option>\n                                </ng-container>\n                                <ng-container *ngIf=\"modalVariantAndState.modalVariant === 'policies'\">\n                                    <option\n                                        *ngFor=\"let policyTemplate of deploymentArtifactOrPolicyModalData.policyTemplates\"\n                                        [value]=\"policyTemplate | json\"\n                                        [disabled]=\"modalVariantForEditDeleteTasks !== '(none)'\">\n                                        {{policyTemplate.name}}\n                                    </option>\n                                </ng-container>\n                            </select>\n                            <i *ngIf=\"deploymentArtifactOrPolicyModalData.artifactTemplates === undefined\"\n                               class=\"fa fa-refresh fa-spin\"></i>\n                            <a href=\"#\" target=\"_blank\" class=\"btn btn-info btn-sm\" id=\"viewArtifactTemplateToLink\"\n                               (click)=\"clickArtifactRef()\">open</a>\n                        </div>\n                    </div>\n                </ng-container>\n            </fieldset>\n            <fieldset id=\"artifactTypeFieldset\">\n                <div class=\"form-group\" id=\"artifactTypeOrPolicyTypeDiv\">\n                    <label\n                        *ngIf=\"modalVariantAndState.modalVariant === 'deployment_artifacts' || modalVariantForEditDeleteTasks === 'deployment_artifacts'\"\n                        for=\"artifactTypeOrPolicyTypeField\">Artifact Type</label>\n                    <label\n                        *ngIf=\"modalVariantAndState.modalVariant === 'policies' || modalVariantForEditDeleteTasks === 'policies'\"\n                        for=\"artifactTypeOrPolicyTypeField\">Policy Type</label>\n\n                    <input type=\"text\"\n                           class=\"form-control\"\n                           *ngIf=\"modalSelectedRadioButton === 'linkpolicies' || modalSelectedRadioButton === 'linkdeployment_artifacts' || modalVariantForEditDeleteTasks != '(none)'\"\n                           [disabled]=\"true\"\n                           [ngModel]=\"deploymentArtifactOrPolicyModalData.modalType\"\n                           name=\"artifactTypeOrPolicyTypeField\"\n                           placeholder=\"Select a Template to see its Type.\"\n                           id=\"artifactTypeOrPolicyTypeField\">\n                    <select [(ngModel)]=\"deploymentArtifactOrPolicyModalData.modalType\"\n                            *ngIf=\"modalVariantForEditDeleteTasks === '(none)' &&\n                            (modalSelectedRadioButton === 'skippolicies' ||\n                            modalSelectedRadioButton === 'skipdeployment_artifacts' ||\n                            modalSelectedRadioButton === 'createArtifactTemplate')\"\n                            name=\"artifactTypeOrPolicyTypeChooser\"\n                            class=\"form-control\"\n                            id=\"artifactTypeOrPolicyTypeChooser\"\n                            type=\"text\"\n                            required=\"required\"\n                            (change)=\"onChangeArtifactTypeOrPolicyTypeInModal($event.target.value, modalVariantAndState.modalVariant)\">\n                        <ng-container *ngIf=\"modalVariantAndState.modalVariant === 'deployment_artifacts'\">\n                            <option *ngFor=\"let artifactType of deploymentArtifactOrPolicyModalData.artifactTypes\"\n                                    [value]=\"artifactType.qName\">{{artifactType.name}}\n                            </option>\n                        </ng-container>\n                        <ng-container *ngIf=\"modalVariantAndState.modalVariant === 'policies'\">\n                            <option *ngFor=\"let policyType of deploymentArtifactOrPolicyModalData.policyTypes\"\n                                    [value]=\"policyType.qName\">{{policyType.name}}\n                            </option>\n                        </ng-container>\n                    </select>\n                </div>\n            </fieldset>\n        </form>\n    </winery-modal-body>\n\n    <!-- DEPLOYMENT_ARTIFACTS OR POLICIES FOOTER -->\n    <winery-modal-footer [showDefaultButtons]=\"false\">\n        <button type=\"button\"\n                id=\"cancelDeploymentArtifacts\"\n                class=\"btn btn-default\"\n                (click)=\"resetDeploymentArtifactOrPolicyModalData()\">\n            Cancel\n        </button>\n        <button *ngIf=\"modalVariantForEditDeleteTasks === '(none)'\"\n                type=\"button\"\n                class=\"btn btn-primary\"\n                (click)=\"addDeploymentArtifactOrPolicy()\"\n                [disabled]=\"!addDeploymentArtifactOrPolicyForm.valid\">\n            Add\n        </button>\n        <button *ngIf=\"modalVariantForEditDeleteTasks !== '(none)'\"\n                type=\"button\"\n                class=\"btn btn-danger\"\n                (click)=\"deleteDeploymentArtifactOrPolicy()\">\n            Delete\n        </button>\n    </winery-modal-footer>\n</winery-modal>\n","styles":["#createArtifactTemplateInput,#linkArtifactTemplateInput,#skipArtifactTemplateInput{margin-right:.5em}.form-group-grouping{padding:1em;background-color:#ddd}"]}]}],"members":{"modal":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild","line":273,"character":5},"arguments":["modal"]}]}],"modalVariantAndState":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":275,"character":5}}]}],"entityTypes":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":276,"character":5}}]}],"currentNodeData":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":277,"character":5}}]}],"modalDataChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":279,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","name":"ɵd"},{"__symbolic":"reference","name":"NgRedux","module":"@angular-redux/store","arguments":[{"__symbolic":"reference","name":"ɵf"}]},{"__symbolic":"reference","name":"ɵh"},{"__symbolic":"reference","name":"ɵx"},{"__symbolic":"reference","name":"ɵbk"},{"__symbolic":"reference","module":"ngx-toastr","name":"ToastrService","line":304,"character":31}]}],"ngOnInit":[{"__symbolic":"method"}],"ngAfterViewInit":[{"__symbolic":"method"}],"ngOnChanges":[{"__symbolic":"method"}],"updateModal":[{"__symbolic":"method"}],"addDeploymentArtifactOrPolicy":[{"__symbolic":"method"}],"onChangeArtifactTypeOrPolicyTypeInModal":[{"__symbolic":"method"}],"updatedTemplateToBeLinkedInModal":[{"__symbolic":"method"}],"checkIfArtifactTemplateAlreadyExists":[{"__symbolic":"method"}],"resetDeploymentArtifactOrPolicyModalData":[{"__symbolic":"method"}],"saveDeploymentArtifactsToModel":[{"__symbolic":"method"}],"savePoliciesToModel":[{"__symbolic":"method"}],"getHostUrl":[{"__symbolic":"method"}],"resetModalData":[{"__symbolic":"method"}],"deleteDeploymentArtifactOrPolicy":[{"__symbolic":"method"}],"getLocalName":[{"__symbolic":"method"}],"getNamespace":[{"__symbolic":"method"}],"clickArtifactRef":[{"__symbolic":"method"}],"makeArtifactUrl":[{"__symbolic":"method"}]}},"ɵbm":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":16,"character":1},"arguments":[{"name":"keysPipe"}]}],"members":{"transform":[{"__symbolic":"method"}]}},"ɵbn":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Pipe","line":16,"character":1},"arguments":[{"name":"localname"}]}],"members":{"transform":[{"__symbolic":"method"}]}}},"origins":{"WineryModule":"./src/app/winery.module","ɵa":"./src/app/winery.component","ɵb":"./src/app/services/loaded.service","ɵc":"./src/app/services/app-ready-event.service","ɵd":"./src/app/services/backend.service","ɵe":"./src/app/services/node-relationship-templates-generator.service","ɵf":"./src/app/redux/store/winery.store","ɵg":"./src/app/palette/palette.component","ɵh":"./src/app/redux/actions/winery.actions","ɵi":"./src/app/sidebar/sidebar.component","ɵj":"./src/app/print-view/print-view.component","ɵk":"./src/app/topology-renderer/topology-renderer.module","ɵl":"./src/repositoryUiDependencies/wineryModalModule/winery.modal.module","ɵm":"./src/repositoryUiDependencies/wineryModalModule/winery.modal.component","ɵn":"./src/repositoryUiDependencies/wineryModalModule/winery.modal.header.component","ɵo":"./src/repositoryUiDependencies/wineryModalModule/winery.modal.footer.component","ɵp":"./src/repositoryUiDependencies/wineryModalModule/winery.modal.body.component","ɵq":"./src/app/navbar/navbar.component","ɵr":"./src/app/redux/actions/topologyRenderer.actions","ɵs":"./src/app/node/node.component","ɵt":"./src/app/canvas/canvas.component","ɵu":"./src/app/layout/layout.directive","ɵv":"./src/app/services/jsPlumb.service","ɵw":"./src/app/services/import-topology.service","ɵx":"./src/app/services/exists.service","ɵy":"./src/app/services/split-match-topology.service","ɵz":"./src/app/services/req-cap.service","ɵba":"./src/app/services/error-handler.service","ɵbb":"./src/app/topology-renderer/topology-renderer.component","ɵbc":"./src/app/node/properties/properties.component","ɵbd":"./src/app/node/requirements/requirements.component","ɵbe":"./src/app/node/target-locations/target-locations.component","ɵbf":"./src/app/node/policies/policies.component","ɵbg":"./src/app/node/deployment-artifacts/deployment-artifacts.component","ɵbh":"./src/app/node/capabilities/capabilities.component","ɵbi":"./src/app/node/properties-content/properties-content.component","ɵbj":"./src/app/node/toscatype-table/toscatype-table.component","ɵbk":"./src/app/canvas/entities-modal/entities-modal.service","ɵbl":"./src/app/canvas/entities-modal/entities-modal.component","ɵbm":"./src/app/pipes/keys.pipe","ɵbn":"./src/app/pipes/localname.pipe"},"importAs":"@winery/topologymodeler"}